<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/css/styles.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/css/styles.css" />
              <option name="originalContent" value="* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;&#10;    line-height: 1.6;&#10;    color: #000000;&#10;}&#10;&#10;.container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 20px;&#10;}&#10;&#10;/* Header */&#10;header {&#10;    background: #0d1117;&#10;    color: white;&#10;    padding: 1rem 0;&#10;    position: fixed;&#10;    width: 100%;&#10;    top: 0;&#10;    z-index: 100;&#10;}&#10;&#10;header .container {&#10;    max-width: none;&#10;    width: 100%;&#10;    padding-left: 0;&#10;    padding-right: 0;&#10;}&#10;&#10;header nav {&#10;    display: flex;&#10;    align-items: center;&#10;    width: 100%;&#10;    justify-content: flex-start;&#10;}&#10;&#10;.logo {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    color: #00d4ff;&#10;    margin-right: auto;&#10;}&#10;&#10;.nav-links, .user-section {&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.nav-links {&#10;    list-style: none;&#10;    margin: 0;&#10;    padding: 0;&#10;    gap: 1.5rem;&#10;}&#10;&#10;.nav-links li {&#10;    list-style: none;&#10;}&#10;&#10;.nav-links a {&#10;    color: #eef2f7;&#10;    text-decoration: none;&#10;    font-weight: 500;&#10;    opacity: 0.9;&#10;    transition: color 160ms ease, opacity 160ms ease;&#10;}&#10;&#10;.nav-links a:hover {&#10;    color: #00d4ff;&#10;    opacity: 1;&#10;}&#10;&#10;.user-section {&#10;    gap: 1rem;&#10;}&#10;&#10;/* User Profile */&#10;.user-section {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.login-btn {&#10;    background: #00d4ff;&#10;    color: white;&#10;    border: none;&#10;    padding: 8px 16px;&#10;    border-radius: 5px;&#10;    cursor: pointer;&#10;    font-size: 0.9rem;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.login-btn:hover {&#10;    background: #00b8e6;&#10;}&#10;&#10;.user-profile {&#10;    display: none;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.user-profile.active {&#10;    display: flex;&#10;}&#10;&#10;.user-avatar {&#10;    width: 40px;&#10;    height: 40px;&#10;    border-radius: 50%;&#10;    border: 2px solid #00d4ff;&#10;    cursor: pointer;&#10;    transition: transform 0.3s;&#10;}&#10;&#10;.user-avatar:hover {&#10;    transform: scale(1.1);&#10;}&#10;&#10;.user-name {&#10;    color: white;&#10;    font-size: 0.9rem;&#10;    max-width: 100px;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;    white-space: nowrap;&#10;}&#10;&#10;/* Dropdown Menu */&#10;.user-dropdown {&#10;    position: relative;&#10;}&#10;&#10;.dropdown-menu {&#10;    position: absolute;&#10;    top: 100%;&#10;    right: 0;&#10;    background: white;&#10;    border-radius: 10px;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.15);&#10;    min-width: 200px;&#10;    margin-top: 10px;&#10;    display: none;&#10;    z-index: 1000;&#10;    overflow: hidden;&#10;}&#10;&#10;.dropdown-menu.show {&#10;    display: block;&#10;}&#10;&#10;.dropdown-item {&#10;    padding: 12px 16px;&#10;    border-bottom: 1px solid #f0f0f0;&#10;    cursor: pointer;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.dropdown-item:hover {&#10;    background: #f3f5f7;&#10;}&#10;&#10;.dropdown-item:first-child {&#10;    border-top-left-radius: 10px;&#10;    border-top-right-radius: 10px;&#10;}&#10;&#10;.dropdown-item:last-child {&#10;    border-bottom-left-radius: 10px;&#10;    border-bottom-right-radius: 10px;&#10;    color: #dc3545;&#10;}&#10;&#10;.dropdown-item a {&#10;    color: #333;&#10;    text-decoration: none;&#10;    display: block;&#10;}&#10;&#10;/* Modal */&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0,0,0,0.8); /* 50% opacity */&#10;    z-index: 10000;&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.modal.show {&#10;    display: flex;&#10;}&#10;&#10;.modal-content {&#10;    background: white;&#10;    padding: 30px;&#10;    border-radius: 12px;&#10;    text-align: center;&#10;    max-width: 400px;&#10;    width: 90%;&#10;    position: relative;&#10;}&#10;&#10;.modal-close {&#10;    position: absolute;&#10;    top: 10px;&#10;    right: 15px;&#10;    font-size: 24px;&#10;    cursor: pointer;&#10;    color: #999;&#10;}&#10;&#10;.modal-close:hover {&#10;    color: #333;&#10;}&#10;&#10;/* Hero Section */&#10;.hero {&#10;    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.3)),&#10;    url('https://newxel.com/wp-content/uploads/2024/06/1920_1080-2.png') center/cover;&#10;    color: white;&#10;    padding: 120px 0 80px;&#10;    text-align: center;&#10;    position: relative;&#10;    overflow: hidden;&#10;    min-height: 500px;&#10;}&#10;&#10;/* Section reveal base/active states */&#10;.features, .pricing, .carousel-section {&#10;    opacity: 0;&#10;    transform: translateY(30px);&#10;    transition: opacity 600ms ease, transform 600ms ease;&#10;}&#10;.features.revealed, .pricing.revealed, .carousel-section.revealed {&#10;    opacity: 1;&#10;    transform: translateY(0);&#10;}&#10;&#10;/* Staggered child animations for grids */&#10;.features-grid, .pricing-grid {&#10;    /* mark as stagger containers via JS */&#10;}&#10;&#10;/* Initial state for items */&#10;.features-grid &gt; * , .pricing-grid &gt; * {&#10;    opacity: 0;&#10;    transform: translateY(20px);&#10;    transition: transform 500ms ease, opacity 500ms ease;&#10;}&#10;&#10;/* When container enters view */&#10;.stagger.in-view &gt; * {&#10;    opacity: 1;&#10;    transform: translateY(0);&#10;}&#10;&#10;/* Stagger delays */&#10;.stagger.in-view &gt; *:nth-child(1) { transition-delay: 60ms; }&#10;.stagger.in-view &gt; *:nth-child(2) { transition-delay: 120ms; }&#10;.stagger.in-view &gt; *:nth-child(3) { transition-delay: 180ms; }&#10;.stagger.in-view &gt; *:nth-child(4) { transition-delay: 240ms; }&#10;.stagger.in-view &gt; *:nth-child(5) { transition-delay: 300ms; }&#10;.stagger.in-view &gt; *:nth-child(6) { transition-delay: 360ms; }&#10;.stagger.in-view &gt; *:nth-child(7) { transition-delay: 420ms; }&#10;.stagger.in-view &gt; *:nth-child(8) { transition-delay: 480ms; }&#10;&#10;/* Server Image Container */&#10;.server-image-container {&#10;    position: absolute;&#10;    top: 50%;&#10;    right: 10%;&#10;    transform: translateY(-50%);&#10;    opacity: 0.3;&#10;    z-index: 1;&#10;    animation: float 3s ease-in-out infinite;&#10;}&#10;&#10;.server-image {&#10;    width: 300px;&#10;    height: auto;&#10;    filter: brightness(1.2) drop-shadow(0 0 20px rgba(0, 212, 255, 0.3));&#10;}&#10;&#10;/* Floating animation for server image */&#10;@keyframes float {&#10;    0%, 100% {&#10;        transform: translateY(-50%) translateX(0);&#10;    }&#10;    50% {&#10;        transform: translateY(-55%) translateX(-10px);&#10;    }&#10;}&#10;&#10;/* Alternative: Server icon using CSS */&#10;.server-icon {&#10;    width: 200px;&#10;    height: 240px;&#10;    background: rgba(255, 255, 255, 0.1);&#10;    border: 3px solid rgba(0, 212, 255, 0.5);&#10;    border-radius: 10px;&#10;    position: relative;&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.server-icon::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 20px;&#10;    left: 20px;&#10;    right: 20px;&#10;    height: 15px;&#10;    background: #00d4ff;&#10;    border-radius: 5px;&#10;    box-shadow: 0 0 10px rgba(0, 212, 255, 0.5);&#10;}&#10;&#10;.server-icon::after {&#10;    content: '';&#10;    position: absolute;&#10;    top: 50px;&#10;    left: 20px;&#10;    right: 20px;&#10;    bottom: 20px;&#10;    background: linear-gradient(180deg, rgba(0, 212, 255, 0.3) 0%, rgba(0, 212, 255, 0.1) 100%);&#10;    border-radius: 5px;&#10;    border: 1px solid rgba(0, 212, 255, 0.3);&#10;}&#10;&#10;/* Server lights */&#10;.server-lights {&#10;    position: absolute;&#10;    bottom: 30px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    display: flex;&#10;    gap: 8px;&#10;}&#10;&#10;.server-light {&#10;    width: 8px;&#10;    height: 8px;&#10;    border-radius: 50%;&#10;    background: #00d4ff;&#10;    box-shadow: 0 0 8px rgba(0, 212, 255, 0.8);&#10;    animation: blink 2s infinite;&#10;}&#10;&#10;.server-light:nth-child(2) {&#10;    animation-delay: 0.5s;&#10;}&#10;&#10;.server-light:nth-child(3) {&#10;    animation-delay: 1s;&#10;}&#10;&#10;@keyframes blink {&#10;    0%, 50% {&#10;        opacity: 1;&#10;    }&#10;    51%, 100% {&#10;        opacity: 0.3;&#10;    }&#10;}&#10;&#10;/* Carousel */&#10;.carousel-section {&#10;    padding: 60px 0;&#10;    background: #f8f9fa;&#10;}&#10;&#10;.carousel-container {&#10;    position: relative;&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;    overflow: hidden;&#10;    border-radius: 12px;&#10;    box-shadow: 0 10px 30px rgba(0,0,0,0.15);&#10;}&#10;&#10;.carousel-wrapper {&#10;    display: flex;&#10;    transition: transform 0.5s ease-in-out;&#10;}&#10;&#10;.carousel-slide {&#10;    min-width: 100%;&#10;    position: relative;&#10;}&#10;&#10;.carousel-slide img {&#10;    width: 100%;&#10;    height: 400px;&#10;    object-fit: cover;&#10;    display: block;&#10;}&#10;&#10;.carousel-caption {&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 0;&#10;    right: 0;&#10;    background: linear-gradient(transparent, rgba(0,0,0,0.8));&#10;    color: white;&#10;    padding: 30px 20px 20px;&#10;    text-align: center;&#10;}&#10;&#10;.carousel-caption h3 {&#10;    font-size: 1.5rem;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.carousel-caption p {&#10;    opacity: 0.9;&#10;}&#10;&#10;.carousel-nav {&#10;    position: absolute;&#10;    top: 50%;&#10;    transform: translateY(-50%);&#10;    background: rgba(0,0,0,0.5);&#10;    color: white;&#10;    border: none;&#10;    width: 50px;&#10;    height: 50px;&#10;    border-radius: 50%;&#10;    cursor: pointer;&#10;    font-size: 1.2rem;&#10;    transition: background 0.3s;&#10;    z-index: 10;&#10;}&#10;&#10;.carousel-nav:hover {&#10;    background: rgba(0,0,0,0.8);&#10;}&#10;&#10;.carousel-prev {&#10;    left: 15px;&#10;}&#10;&#10;.carousel-next {&#10;    right: 15px;&#10;}&#10;&#10;.carousel-dots {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 10px;&#10;    margin-top: 20px;&#10;}&#10;&#10;.carousel-dot {&#10;    width: 12px;&#10;    height: 12px;&#10;    border-radius: 50%;&#10;    background: #ccc;&#10;    cursor: pointer;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.carousel-dot.active {&#10;    background: #00d4ff;&#10;}&#10;&#10;/* Features */&#10;.features {&#10;    padding: 80px 0;&#10;    background: #f8f9fa;&#10;}&#10;&#10;.features-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 2rem;&#10;    margin-top: 3rem;&#10;}&#10;&#10;.feature-card {&#10;    background: white;&#10;    padding: 2rem;&#10;    border-radius: 8px;&#10;    text-align: center;&#10;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.feature-icon {&#10;    font-size: 3rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;/* Pricing */&#10;.pricing {&#10;    padding: 80px 0;&#10;}&#10;&#10;.pricing h2 {&#10;    text-align: center;&#10;    font-size: 2.5rem;&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.pricing-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 2rem;&#10;    margin-top: 2rem;&#10;}&#10;&#10;.pricing-card {&#10;    background: white;&#10;    border: 2px solid #e9ecef;&#10;    border-radius: 8px;&#10;    padding: 2rem;&#10;    text-align: center;&#10;    position: relative;&#10;    transition: transform 0.3s;&#10;}&#10;&#10;.pricing-card:hover {&#10;    transform: translateY(-5px);&#10;    border-color: #00d4ff;&#10;}&#10;&#10;.popular {&#10;    border-color: #00d4ff;&#10;    transform: scale(1.05);&#10;}&#10;&#10;.popular::before {&#10;    content: &quot;MÃS POPULAR&quot;;&#10;    position: absolute;&#10;    top: -15px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    background: #00d4ff;&#10;    color: white;&#10;    padding: 5px 20px;&#10;    border-radius: 20px;&#10;    font-size: 0.8rem;&#10;    font-weight: bold;&#10;}&#10;&#10;.plan-name {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.plan-price {&#10;    font-size: 2.5rem;&#10;    font-weight: bold;&#10;    color: #00d4ff;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.plan-period {&#10;    color: #000000;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.plan-features {&#10;    list-style: none;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.plan-features li {&#10;    padding: 0.5rem 0;&#10;    border-bottom: 1px solid #f0f0f0;&#10;}&#10;&#10;/* Footer */&#10;footer {&#10;    background: #0d1117;&#10;    color: white;&#10;    padding: 40px 0;&#10;    text-align: center;&#10;}&#10;&#10;.footer-content {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 2rem;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.footer-section h3 {&#10;    margin-bottom: 1rem;&#10;    color: #00d4ff;&#10;}&#10;&#10;.footer-section a {&#10;    color: #ccc;&#10;    text-decoration: none;&#10;    display: block;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.footer-section a:hover {&#10;    color: #00d4ff;&#10;}&#10;&#10;/* Debug Info */&#10;.debug-info {&#10;    position: fixed;&#10;    bottom: 10px;&#10;    right: 10px;&#10;    background: rgba(0,0,0,0.8);&#10;    color: white;&#10;    padding: 10px;&#10;    border-radius: 5px;&#10;    font-size: 0.8rem;&#10;    z-index: 1000;&#10;}&#10;&#10;/* CTA button as styled link */&#10;a.cta-button {&#10;    background: #00d4ff;&#10;    color: #fff !important;&#10;    padding: 12px 24px;&#10;    border-radius: 8px;&#10;    border: none;&#10;    text-decoration: none !important;&#10;    display: inline-flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    font-weight: 600;&#10;    line-height: 1;&#10;    transition: background 200ms ease, transform 120ms ease;&#10;}&#10;a.cta-button:visited { color: #fff !important; }&#10;a.cta-button:hover { background: #00b8e6; text-decoration: none; }&#10;a.cta-button:active { transform: translateY(1px); }&#10;&#10;/* Legacy .cta-button rule kept for non-anchor buttons */&#10;.cta-button { text-decoration: none; }&#10;" />
              <option name="updatedContent" value="* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;&#10;    line-height: 1.6;&#10;    color: #000000;&#10;}&#10;&#10;.container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 20px;&#10;}&#10;&#10;/* Header */&#10;header {&#10;    background: #0d1117;&#10;    color: white;&#10;    padding: 1rem 0;&#10;    position: fixed;&#10;    width: 100%;&#10;    top: 0;&#10;    z-index: 100;&#10;}&#10;&#10;header .container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding-left: 20px;&#10;    padding-right: 20px;&#10;}&#10;&#10;header nav {&#10;    display: flex;&#10;    align-items: center;&#10;    width: 100%;&#10;    justify-content: flex-start;&#10;}&#10;&#10;.logo {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    color: #00d4ff;&#10;    margin-right: auto;&#10;}&#10;&#10;.nav-links, .user-section {&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.nav-links {&#10;    list-style: none;&#10;    margin: 0;&#10;    padding: 0;&#10;    gap: 1.5rem;&#10;}&#10;&#10;.nav-links li {&#10;    list-style: none;&#10;}&#10;&#10;.nav-links a {&#10;    color: #eef2f7;&#10;    text-decoration: none;&#10;    font-weight: 500;&#10;    opacity: 0.9;&#10;    transition: color 160ms ease, opacity 160ms ease;&#10;}&#10;&#10;.nav-links a:hover {&#10;    color: #00d4ff;&#10;    opacity: 1;&#10;}&#10;&#10;.user-section {&#10;    gap: 1rem;&#10;}&#10;&#10;/* User Profile */&#10;.user-section {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 1rem;&#10;}&#10;&#10;.login-btn {&#10;    background: #00d4ff;&#10;    color: white;&#10;    border: none;&#10;    padding: 8px 16px;&#10;    border-radius: 5px;&#10;    cursor: pointer;&#10;    font-size: 0.9rem;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.login-btn:hover {&#10;    background: #00b8e6;&#10;}&#10;&#10;.user-profile {&#10;    display: none;&#10;    align-items: center;&#10;    gap: 0.5rem;&#10;}&#10;&#10;.user-profile.active {&#10;    display: flex;&#10;}&#10;&#10;.user-avatar {&#10;    width: 40px;&#10;    height: 40px;&#10;    border-radius: 50%;&#10;    border: 2px solid #00d4ff;&#10;    cursor: pointer;&#10;    transition: transform 0.3s;&#10;}&#10;&#10;.user-avatar:hover {&#10;    transform: scale(1.1);&#10;}&#10;&#10;.user-name {&#10;    color: white;&#10;    font-size: 0.9rem;&#10;    max-width: 100px;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;    white-space: nowrap;&#10;}&#10;&#10;/* Dropdown Menu */&#10;.user-dropdown {&#10;    position: relative;&#10;}&#10;&#10;.dropdown-menu {&#10;    position: absolute;&#10;    top: 100%;&#10;    right: 0;&#10;    background: white;&#10;    border-radius: 10px;&#10;    box-shadow: 0 4px 20px rgba(0,0,0,0.15);&#10;    min-width: 200px;&#10;    margin-top: 10px;&#10;    display: none;&#10;    z-index: 1000;&#10;    overflow: hidden;&#10;}&#10;&#10;.dropdown-menu.show {&#10;    display: block;&#10;}&#10;&#10;.dropdown-item {&#10;    padding: 12px 16px;&#10;    border-bottom: 1px solid #f0f0f0;&#10;    cursor: pointer;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.dropdown-item:hover {&#10;    background: #f3f5f7;&#10;}&#10;&#10;.dropdown-item:first-child {&#10;    border-top-left-radius: 10px;&#10;    border-top-right-radius: 10px;&#10;}&#10;&#10;.dropdown-item:last-child {&#10;    border-bottom-left-radius: 10px;&#10;    border-bottom-right-radius: 10px;&#10;    color: #dc3545;&#10;}&#10;&#10;.dropdown-item a {&#10;    color: #333;&#10;    text-decoration: none;&#10;    display: block;&#10;}&#10;&#10;/* Modal */&#10;.modal {&#10;    display: none;&#10;    position: fixed;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 100%;&#10;    background: rgba(0,0,0,0.8); /* 50% opacity */&#10;    z-index: 10000;&#10;    justify-content: center;&#10;    align-items: center;&#10;}&#10;&#10;.modal.show {&#10;    display: flex;&#10;}&#10;&#10;.modal-content {&#10;    background: white;&#10;    padding: 30px;&#10;    border-radius: 12px;&#10;    text-align: center;&#10;    max-width: 400px;&#10;    width: 90%;&#10;    position: relative;&#10;}&#10;&#10;.modal-close {&#10;    position: absolute;&#10;    top: 10px;&#10;    right: 15px;&#10;    font-size: 24px;&#10;    cursor: pointer;&#10;    color: #999;&#10;}&#10;&#10;.modal-close:hover {&#10;    color: #333;&#10;}&#10;&#10;/* Hero Section */&#10;.hero {&#10;    background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.3)),&#10;    url('https://newxel.com/wp-content/uploads/2024/06/1920_1080-2.png') center/cover;&#10;    color: white;&#10;    padding: 120px 0 80px;&#10;    text-align: center;&#10;    position: relative;&#10;    overflow: hidden;&#10;    min-height: 500px;&#10;}&#10;&#10;/* Section reveal base/active states */&#10;.features, .pricing, .carousel-section {&#10;    opacity: 0;&#10;    transform: translateY(30px);&#10;    transition: opacity 600ms ease, transform 600ms ease;&#10;}&#10;.features.revealed, .pricing.revealed, .carousel-section.revealed {&#10;    opacity: 1;&#10;    transform: translateY(0);&#10;}&#10;&#10;/* Staggered child animations for grids */&#10;.features-grid, .pricing-grid {&#10;    /* mark as stagger containers via JS */&#10;}&#10;&#10;/* Initial state for items */&#10;.features-grid &gt; * , .pricing-grid &gt; * {&#10;    opacity: 0;&#10;    transform: translateY(20px);&#10;    transition: transform 500ms ease, opacity 500ms ease;&#10;}&#10;&#10;/* When container enters view */&#10;.stagger.in-view &gt; * {&#10;    opacity: 1;&#10;    transform: translateY(0);&#10;}&#10;&#10;/* Stagger delays */&#10;.stagger.in-view &gt; *:nth-child(1) { transition-delay: 60ms; }&#10;.stagger.in-view &gt; *:nth-child(2) { transition-delay: 120ms; }&#10;.stagger.in-view &gt; *:nth-child(3) { transition-delay: 180ms; }&#10;.stagger.in-view &gt; *:nth-child(4) { transition-delay: 240ms; }&#10;.stagger.in-view &gt; *:nth-child(5) { transition-delay: 300ms; }&#10;.stagger.in-view &gt; *:nth-child(6) { transition-delay: 360ms; }&#10;.stagger.in-view &gt; *:nth-child(7) { transition-delay: 420ms; }&#10;.stagger.in-view &gt; *:nth-child(8) { transition-delay: 480ms; }&#10;&#10;/* Server Image Container */&#10;.server-image-container {&#10;    position: absolute;&#10;    top: 50%;&#10;    right: 10%;&#10;    transform: translateY(-50%);&#10;    opacity: 0.3;&#10;    z-index: 1;&#10;    animation: float 3s ease-in-out infinite;&#10;}&#10;&#10;.server-image {&#10;    width: 300px;&#10;    height: auto;&#10;    filter: brightness(1.2) drop-shadow(0 0 20px rgba(0, 212, 255, 0.3));&#10;}&#10;&#10;/* Floating animation for server image */&#10;@keyframes float {&#10;    0%, 100% {&#10;        transform: translateY(-50%) translateX(0);&#10;    }&#10;    50% {&#10;        transform: translateY(-55%) translateX(-10px);&#10;    }&#10;}&#10;&#10;/* Alternative: Server icon using CSS */&#10;.server-icon {&#10;    width: 200px;&#10;    height: 240px;&#10;    background: rgba(255, 255, 255, 0.1);&#10;    border: 3px solid rgba(0, 212, 255, 0.5);&#10;    border-radius: 10px;&#10;    position: relative;&#10;    backdrop-filter: blur(10px);&#10;}&#10;&#10;.server-icon::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 20px;&#10;    left: 20px;&#10;    right: 20px;&#10;    height: 15px;&#10;    background: #00d4ff;&#10;    border-radius: 5px;&#10;    box-shadow: 0 0 10px rgba(0, 212, 255, 0.5);&#10;}&#10;&#10;.server-icon::after {&#10;    content: '';&#10;    position: absolute;&#10;    top: 50px;&#10;    left: 20px;&#10;    right: 20px;&#10;    bottom: 20px;&#10;    background: linear-gradient(180deg, rgba(0, 212, 255, 0.3) 0%, rgba(0, 212, 255, 0.1) 100%);&#10;    border-radius: 5px;&#10;    border: 1px solid rgba(0, 212, 255, 0.3);&#10;}&#10;&#10;/* Server lights */&#10;.server-lights {&#10;    position: absolute;&#10;    bottom: 30px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    display: flex;&#10;    gap: 8px;&#10;}&#10;&#10;.server-light {&#10;    width: 8px;&#10;    height: 8px;&#10;    border-radius: 50%;&#10;    background: #00d4ff;&#10;    box-shadow: 0 0 8px rgba(0, 212, 255, 0.8);&#10;    animation: blink 2s infinite;&#10;}&#10;&#10;.server-light:nth-child(2) {&#10;    animation-delay: 0.5s;&#10;}&#10;&#10;.server-light:nth-child(3) {&#10;    animation-delay: 1s;&#10;}&#10;&#10;@keyframes blink {&#10;    0%, 50% {&#10;        opacity: 1;&#10;    }&#10;    51%, 100% {&#10;        opacity: 0.3;&#10;    }&#10;}&#10;&#10;/* Carousel */&#10;.carousel-section {&#10;    padding: 60px 0;&#10;    background: #f8f9fa;&#10;}&#10;&#10;.carousel-container {&#10;    position: relative;&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;    overflow: hidden;&#10;    border-radius: 12px;&#10;    box-shadow: 0 10px 30px rgba(0,0,0,0.15);&#10;}&#10;&#10;.carousel-wrapper {&#10;    display: flex;&#10;    transition: transform 0.5s ease-in-out;&#10;}&#10;&#10;.carousel-slide {&#10;    min-width: 100%;&#10;    position: relative;&#10;}&#10;&#10;.carousel-slide img {&#10;    width: 100%;&#10;    height: 400px;&#10;    object-fit: cover;&#10;    display: block;&#10;}&#10;&#10;.carousel-caption {&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 0;&#10;    right: 0;&#10;    background: linear-gradient(transparent, rgba(0,0,0,0.8));&#10;    color: white;&#10;    padding: 30px 20px 20px;&#10;    text-align: center;&#10;}&#10;&#10;.carousel-caption h3 {&#10;    font-size: 1.5rem;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.carousel-caption p {&#10;    opacity: 0.9;&#10;}&#10;&#10;.carousel-nav {&#10;    position: absolute;&#10;    top: 50%;&#10;    transform: translateY(-50%);&#10;    background: rgba(0,0,0,0.5);&#10;    color: white;&#10;    border: none;&#10;    width: 50px;&#10;    height: 50px;&#10;    border-radius: 50%;&#10;    cursor: pointer;&#10;    font-size: 1.2rem;&#10;    transition: background 0.3s;&#10;    z-index: 10;&#10;}&#10;&#10;.carousel-nav:hover {&#10;    background: rgba(0,0,0,0.8);&#10;}&#10;&#10;.carousel-prev {&#10;    left: 15px;&#10;}&#10;&#10;.carousel-next {&#10;    right: 15px;&#10;}&#10;&#10;.carousel-dots {&#10;    display: flex;&#10;    justify-content: center;&#10;    gap: 10px;&#10;    margin-top: 20px;&#10;}&#10;&#10;.carousel-dot {&#10;    width: 12px;&#10;    height: 12px;&#10;    border-radius: 50%;&#10;    background: #ccc;&#10;    cursor: pointer;&#10;    transition: background 0.3s;&#10;}&#10;&#10;.carousel-dot.active {&#10;    background: #00d4ff;&#10;}&#10;&#10;/* Features */&#10;.features {&#10;    padding: 80px 0;&#10;    background: #f8f9fa;&#10;}&#10;&#10;.features-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 2rem;&#10;    margin-top: 3rem;&#10;}&#10;&#10;.feature-card {&#10;    background: white;&#10;    padding: 2rem;&#10;    border-radius: 8px;&#10;    text-align: center;&#10;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);&#10;}&#10;&#10;.feature-icon {&#10;    font-size: 3rem;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;/* Pricing */&#10;.pricing {&#10;    padding: 80px 0;&#10;}&#10;&#10;.pricing h2 {&#10;    text-align: center;&#10;    font-size: 2.5rem;&#10;    margin-bottom: 3rem;&#10;}&#10;&#10;.pricing-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 2rem;&#10;    margin-top: 2rem;&#10;}&#10;&#10;.pricing-card {&#10;    background: white;&#10;    border: 2px solid #e9ecef;&#10;    border-radius: 8px;&#10;    padding: 2rem;&#10;    text-align: center;&#10;    position: relative;&#10;    transition: transform 0.3s;&#10;}&#10;&#10;.pricing-card:hover {&#10;    transform: translateY(-5px);&#10;    border-color: #00d4ff;&#10;}&#10;&#10;.popular {&#10;    border-color: #00d4ff;&#10;    transform: scale(1.05);&#10;}&#10;&#10;.popular::before {&#10;    content: &quot;MÃS POPULAR&quot;;&#10;    position: absolute;&#10;    top: -15px;&#10;    left: 50%;&#10;    transform: translateX(-50%);&#10;    background: #00d4ff;&#10;    color: white;&#10;    padding: 5px 20px;&#10;    border-radius: 20px;&#10;    font-size: 0.8rem;&#10;    font-weight: bold;&#10;}&#10;&#10;.plan-name {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    margin-bottom: 1rem;&#10;}&#10;&#10;.plan-price {&#10;    font-size: 2.5rem;&#10;    font-weight: bold;&#10;    color: #00d4ff;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.plan-period {&#10;    color: #000000;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.plan-features {&#10;    list-style: none;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.plan-features li {&#10;    padding: 0.5rem 0;&#10;    border-bottom: 1px solid #f0f0f0;&#10;}&#10;&#10;/* Footer */&#10;footer {&#10;    background: #0d1117;&#10;    color: white;&#10;    padding: 40px 0;&#10;    text-align: center;&#10;}&#10;&#10;.footer-content {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));&#10;    gap: 2rem;&#10;    margin-bottom: 2rem;&#10;}&#10;&#10;.footer-section h3 {&#10;    margin-bottom: 1rem;&#10;    color: #00d4ff;&#10;}&#10;&#10;.footer-section a {&#10;    color: #ccc;&#10;    text-decoration: none;&#10;    display: block;&#10;    margin-bottom: 0.5rem;&#10;}&#10;&#10;.footer-section a:hover {&#10;    color: #00d4ff;&#10;}&#10;&#10;/* Debug Info */&#10;.debug-info {&#10;    position: fixed;&#10;    bottom: 10px;&#10;    right: 10px;&#10;    background: rgba(0,0,0,0.8);&#10;    color: white;&#10;    padding: 10px;&#10;    border-radius: 5px;&#10;    font-size: 0.8rem;&#10;    z-index: 1000;&#10;}&#10;&#10;/* CTA button as styled link */&#10;a.cta-button {&#10;    background: #00d4ff;&#10;    color: #fff !important;&#10;    padding: 12px 24px;&#10;    border-radius: 8px;&#10;    border: none;&#10;    text-decoration: none !important;&#10;    display: inline-flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    font-weight: 600;&#10;    line-height: 1;&#10;    transition: background 200ms ease, transform 120ms ease;&#10;}&#10;a.cta-button:visited { color: #fff !important; }&#10;a.cta-button:hover { background: #00b8e6; text-decoration: none; }&#10;a.cta-button:active { transform: translateY(1px); }&#10;&#10;/* Legacy .cta-button rule kept for non-anchor buttons */&#10;.cta-button { text-decoration: none; }" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/index.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;es&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;BitHosting Argentina - Hosting Local&lt;/title&gt;&#10;    &lt;script src=&quot;https://accounts.google.com/gsi/client&quot; async defer&gt;&lt;/script&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/styles.css&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;!-- Header --&gt;&#10;&lt;header&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;nav&gt;&#10;            &lt;div class=&quot;logo&quot; style=&quot;display: flex; align-items: center; gap: 10px;&quot;&gt;&#10;                &lt;img src=&quot;https://via.placeholder.com/40x40?text=B&quot; alt=&quot;Logo BitHosting&quot; style=&quot;width:40px;height:40px;border-radius:8px;background:#00d4ff;&quot;&gt;&#10;                BitHosting&#10;            &lt;/div&gt;&#10;            &lt;div style=&quot;flex:1;&quot;&gt;&lt;/div&gt;&#10;            &lt;ul class=&quot;nav-links&quot;&gt;&#10;                &lt;li&gt;&lt;a href=&quot;#inicio&quot;&gt;Inicio&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;#precios&quot;&gt;Precios&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;#soporte&quot;&gt;Soporte&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;#contacto&quot;&gt;Contacto&lt;/a&gt;&lt;/li&gt;&#10;                &lt;li&gt;&lt;a href=&quot;#cuenta&quot; id=&quot;miCuentaLink&quot; style=&quot;display: none;&quot;&gt;Mi Cuenta&lt;/a&gt;&lt;/li&gt;&#10;            &lt;/ul&gt;&#10;            &lt;div class=&quot;user-section&quot;&gt;&#10;                &lt;button class=&quot;login-btn&quot; id=&quot;loginBtn&quot;&gt;&#10;                    &lt;span&gt;Iniciar Sesión&lt;/span&gt;&#10;                &lt;/button&gt;&#10;                &lt;div class=&quot;user-profile&quot; id=&quot;userProfile&quot;&gt;&#10;                    &lt;span class=&quot;user-name&quot; id=&quot;userName&quot;&gt;&lt;/span&gt;&#10;                    &lt;div class=&quot;user-dropdown&quot;&gt;&#10;                        &lt;img class=&quot;user-avatar&quot; id=&quot;userAvatar&quot; src=&quot;&quot; alt=&quot;User&quot;&gt;&#10;                        &lt;div class=&quot;dropdown-menu&quot; id=&quot;dropdownMenu&quot;&gt;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;a href=&quot;#panel&quot;&gt;Panel de Control&lt;/a&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;a href=&quot;#facturas&quot;&gt;Facturación&lt;/a&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#10;                                &lt;a href=&quot;#soporte&quot;&gt;Soporte&lt;/a&gt;&#10;                            &lt;/div&gt;&#10;                            &lt;div class=&quot;dropdown-item&quot; id=&quot;logoutBtn&quot;&gt;&#10;                                Cerrar Sesión&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;&lt;/header&gt;&#10;&#10;&lt;!-- Login Modal --&gt;&#10;&lt;div class=&quot;modal&quot; id=&quot;loginModal&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#10;        &lt;!-- Replace inline onclick with button id --&gt;&#10;        &lt;button type=&quot;button&quot; class=&quot;modal-close&quot; id=&quot;closeLoginBtn&quot; aria-label=&quot;Cerrar&quot;&gt;&amp;times;&lt;/button&gt;&#10;        &lt;h3&gt;Iniciar Sesión&lt;/h3&gt;&#10;        &lt;p&gt;Usa tu cuenta de Google para acceder&lt;/p&gt;&#10;        &lt;!-- Declarative Google Sign-In fallback --&gt;&#10;        &lt;div id=&quot;google-signin-fallback&quot;&gt;&#10;            &lt;div id=&quot;g_id_onload&quot;&#10;                 data-client_id=&quot;614144050505-a02n5fod2ofne58nt9i01tj5ok977eot.apps.googleusercontent.com&quot;&#10;                 data-context=&quot;signin&quot;&#10;                 data-ux_mode=&quot;popup&quot;&#10;                 data-callback=&quot;handleCredentialResponse&quot;&#10;                 data-auto_prompt=&quot;false&quot;&gt;&lt;/div&gt;&#10;            &lt;div class=&quot;g_id_signin&quot;&#10;                 data-type=&quot;standard&quot;&#10;                 data-size=&quot;large&quot;&#10;                 data-theme=&quot;outline&quot;&#10;                 data-text=&quot;signin_with&quot;&#10;                 data-shape=&quot;pill&quot;&#10;                 data-logo_alignment=&quot;left&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;!-- Programmatic render target --&gt;&#10;        &lt;div id=&quot;google-signin-button&quot;&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Hero Section --&gt;&#10;&lt;section class=&quot;hero with-server-bg&quot; id=&quot;inicio&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;hero-content&quot;&gt;&#10;            &lt;h1&gt;BitHosting&lt;/h1&gt;&#10;            &lt;p&gt;Servidores virtuales de alto rendimiento con baja latencia, soporte en español y precios en pesos&lt;/p&gt;&#10;            &lt;a href=&quot;#pricing&quot; class=&quot;cta-button&quot;&gt;Ver Planes&lt;/a&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&lt;!-- Carousel Section --&gt;&#10;&lt;section class=&quot;carousel-section&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;text-align: center; font-size: 2.5rem; margin-bottom: 2rem;&quot;&gt;Nuestros Servicios&lt;/h2&gt;&#10;        &lt;div class=&quot;carousel-container&quot;&gt;&#10;            &lt;div class=&quot;carousel-wrapper&quot; id=&quot;carouselWrapper&quot;&gt;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Datacenter&quot;&gt;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#10;                        &lt;h3&gt;Infraestructura Moderna&lt;/h3&gt;&#10;                        &lt;p&gt;Servidores de última generación con SSD y procesadores Intel de alto rendimiento&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Conexión&quot;&gt;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#10;                        &lt;h3&gt;Conectividad Premium&lt;/h3&gt;&#10;                        &lt;p&gt;Conexión directa a Buenos Aires con latencia ultra baja para usuarios argentinos&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1560472355-536de3962603?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Soporte&quot;&gt;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#10;                        &lt;h3&gt;Soporte 24/7&lt;/h3&gt;&#10;                        &lt;p&gt;Atención técnica especializada en español durante horarios comerciales argentinos&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Seguridad&quot;&gt;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#10;                        &lt;h3&gt;Máxima Seguridad&lt;/h3&gt;&#10;                        &lt;p&gt;Backups automáticos, firewall configurado y monitoreo constante de todos los servicios&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;button class=&quot;carousel-nav carousel-prev&quot; onclick=&quot;changeSlide(-1)&quot;&gt;‹&lt;/button&gt;&#10;            &lt;button class=&quot;carousel-nav carousel-next&quot; onclick=&quot;changeSlide(1)&quot;&gt;›&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div class=&quot;carousel-dots&quot;&gt;&#10;            &lt;span class=&quot;carousel-dot active&quot; onclick=&quot;currentSlide(1)&quot;&gt;&lt;/span&gt;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(2)&quot;&gt;&lt;/span&gt;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(3)&quot;&gt;&lt;/span&gt;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(4)&quot;&gt;&lt;/span&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&#10;&lt;!-- Features --&gt;&#10;&lt;section class=&quot;features&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;text-align: center; font-size: 2.5rem; margin-bottom: 1rem;&quot;&gt;¿Por qué elegir VPS Argentina?&lt;/h2&gt;&#10;        &lt;div class=&quot;features-grid&quot;&gt;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#10;                &lt;h3&gt;Servidores Locales&lt;/h3&gt;&#10;                &lt;p&gt;Ubicados en Buenos Aires para mínima latencia. Ideal para usuarios argentinos.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;⚡&lt;/div&gt;&#10;                &lt;h3&gt;Setup Instantáneo&lt;/h3&gt;&#10;                &lt;p&gt;Tu servidor listo en menos de 5 minutos. Sin esperas ni complicaciones.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#10;                &lt;h3&gt;Soporte en Español&lt;/h3&gt;&#10;                &lt;p&gt;Atención técnica en tu idioma y horario argentino. WhatsApp directo.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#10;                &lt;h3&gt;Precios en Pesos&lt;/h3&gt;&#10;                &lt;p&gt;Sin fluctuaciones del dólar. Facturación local argentina.&lt;/p&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&#10;&lt;!-- Pricing --&gt;&#10;&lt;section class=&quot;pricing&quot; id=&quot;precios&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2&gt;Planes VPS Linux&lt;/h2&gt;&#10;        &lt;div class=&quot;pricing-grid&quot;&gt;&#10;            &lt;div class=&quot;pricing-card&quot;&gt;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Mini&lt;/div&gt;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$5000&lt;/div&gt;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#10;                    &lt;li&gt;1 vCPU&lt;/li&gt;&#10;                    &lt;li&gt;250 MB RAM&lt;/li&gt;&#10;                    &lt;li&gt;5 GB SSD&lt;/li&gt;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#10;                    &lt;li&gt;Ubuntu/CentOS&lt;/li&gt;&#10;                    &lt;li&gt;Acceso SSH&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;pricing-card popular&quot;&gt;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Estándar&lt;/div&gt;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$15.000&lt;/div&gt;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#10;                    &lt;li&gt;2 vCPU&lt;/li&gt;&#10;                    &lt;li&gt;2 GB RAM&lt;/li&gt;&#10;                    &lt;li&gt;50 GB SSD&lt;/li&gt;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#10;                    &lt;li&gt;Ubuntu/CentOS/Debian&lt;/li&gt;&#10;                    &lt;li&gt;Backup Semanal&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;pricing-card&quot;&gt;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Profesional&lt;/div&gt;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$25.000&lt;/div&gt;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#10;                    &lt;li&gt;4 vCPU&lt;/li&gt;&#10;                    &lt;li&gt;4 GB RAM&lt;/li&gt;&#10;                    &lt;li&gt;80 GB SSD&lt;/li&gt;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#10;                    &lt;li&gt;Todas las distros&lt;/li&gt;&#10;                    &lt;li&gt;Backup Diario&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/section&gt;&#10;&#10;&lt;!-- Footer --&gt;&#10;&lt;footer id=&quot;contacto&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;footer-content&quot;&gt;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#10;                &lt;h3&gt;Contacto&lt;/h3&gt;&#10;                &lt;a href=&quot;#&quot;&gt;WhatsApp: +54 9 11 XXXX-XXXX&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Email: soporte@XXXXX.com&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Buenos Aires, Argentina&lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#10;                &lt;h3&gt;Servicios&lt;/h3&gt;&#10;                &lt;a href=&quot;#&quot;&gt;VPS Linux&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Migración Gratuita&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Soporte Técnico&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Backups&lt;/a&gt;&#10;            &lt;/div&gt;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#10;                &lt;h3&gt;Recursos&lt;/h3&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Documentación&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Tutoriales&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Estado del Servicio&lt;/a&gt;&#10;                &lt;a href=&quot;#&quot;&gt;Términos de Servicio&lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;p&gt;&amp;copy; 2025 BitHosting. Todos los derechos reservados.&lt;/p&gt;&#10;    &lt;/div&gt;&#10;&lt;/footer&gt;&#10;&#10;&lt;!-- Debug Info --&gt;&#10;&lt;div class=&quot;debug-info&quot; id=&quot;debugInfo&quot;&gt;&#10;    URL: &lt;span id=&quot;currentUrl&quot;&gt;&lt;/span&gt;&lt;br&gt;&#10;    Status: &lt;span id=&quot;authStatus&quot;&gt;No logueado&lt;/span&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;script src=&quot;js/auth.js&quot;&gt;&lt;/script&gt;&#10;&lt;script src=&quot;js/carousel.js&quot;&gt;&lt;/script&gt;&#10;&lt;script src=&quot;js/main.js&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#13;&#10;&lt;html lang=&quot;es&quot;&gt;&#13;&#10;&lt;head&gt;&#13;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#13;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#13;&#10;    &lt;title&gt;BitHosting Argentina - Hosting Local&lt;/title&gt;&#13;&#10;    &lt;script src=&quot;https://accounts.google.com/gsi/client&quot; async defer&gt;&lt;/script&gt;&#13;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;css/styles.css&quot;&gt;&#13;&#10;&lt;/head&gt;&#13;&#10;&lt;body&gt;&#13;&#10;&lt;!-- Header --&gt;&#13;&#10;&lt;header&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;nav&gt;&#13;&#10;            &lt;div class=&quot;logo&quot; style=&quot;display: flex; align-items: center; gap: 10px;&quot;&gt;&#13;&#10;                &lt;img src=&quot;data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'&gt;&lt;defs&gt;&lt;linearGradient id='g' x1='0' y1='0' x2='1' y2='1'&gt;&lt;stop offset='0%' stop-color='%2300d4ff'/&gt;&lt;stop offset='100%' stop-color='%2300b8e6'/&gt;&lt;/linearGradient&gt;&lt;/defs&gt;&lt;rect rx='8' ry='8' width='40' height='40' fill='url(%23g)'/&gt;&lt;text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-family='Segoe UI, Roboto, sans-serif' font-size='20' fill='%23001018'&gt;B&lt;/text&gt;&lt;/svg&gt;&quot; alt=&quot;Logo BitHosting&quot; style=&quot;width:40px;height:40px;border-radius:8px;background:#00d4ff;&quot;&gt;&#13;&#10;                BitHosting&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div style=&quot;flex:1;&quot;&gt;&lt;/div&gt;&#13;&#10;            &lt;ul class=&quot;nav-links&quot;&gt;&#13;&#10;                &lt;li&gt;&lt;a href=&quot;#inicio&quot;&gt;Inicio&lt;/a&gt;&lt;/li&gt;&#13;&#10;                &lt;li&gt;&lt;a href=&quot;#precios&quot;&gt;Precios&lt;/a&gt;&lt;/li&gt;&#13;&#10;                &lt;li&gt;&lt;a href=&quot;#soporte&quot;&gt;Soporte&lt;/a&gt;&lt;/li&gt;&#13;&#10;                &lt;li&gt;&lt;a href=&quot;#contacto&quot;&gt;Contacto&lt;/a&gt;&lt;/li&gt;&#13;&#10;                &lt;li&gt;&lt;a href=&quot;#cuenta&quot; id=&quot;miCuentaLink&quot; style=&quot;display: none;&quot;&gt;Mi Cuenta&lt;/a&gt;&lt;/li&gt;&#13;&#10;            &lt;/ul&gt;&#13;&#10;            &lt;div class=&quot;user-section&quot;&gt;&#13;&#10;                &lt;button class=&quot;login-btn&quot; id=&quot;loginBtn&quot;&gt;&#13;&#10;                    &lt;span&gt;Iniciar Sesión&lt;/span&gt;&#13;&#10;                &lt;/button&gt;&#13;&#10;                &lt;div class=&quot;user-profile&quot; id=&quot;userProfile&quot;&gt;&#13;&#10;                    &lt;span class=&quot;user-name&quot; id=&quot;userName&quot;&gt;&lt;/span&gt;&#13;&#10;                    &lt;div class=&quot;user-dropdown&quot;&gt;&#13;&#10;                        &lt;img class=&quot;user-avatar&quot; id=&quot;userAvatar&quot; src=&quot;&quot; alt=&quot;User&quot;&gt;&#13;&#10;                        &lt;div class=&quot;dropdown-menu&quot; id=&quot;dropdownMenu&quot;&gt;&#13;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#13;&#10;                                &lt;a href=&quot;#panel&quot;&gt;Panel de Control&lt;/a&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#13;&#10;                                &lt;a href=&quot;#facturas&quot;&gt;Facturación&lt;/a&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div class=&quot;dropdown-item&quot;&gt;&#13;&#10;                                &lt;a href=&quot;#soporte&quot;&gt;Soporte&lt;/a&gt;&#13;&#10;                            &lt;/div&gt;&#13;&#10;                            &lt;div class=&quot;dropdown-item&quot; id=&quot;logoutBtn&quot;&gt;&#13;&#10;                                Cerrar Sesión&#13;&#10;                            &lt;/div&gt;&#13;&#10;                        &lt;/div&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;        &lt;/nav&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/header&gt;&#13;&#10;&#13;&#10;&lt;!-- Login Modal --&gt;&#13;&#10;&lt;div class=&quot;modal&quot; id=&quot;loginModal&quot;&gt;&#13;&#10;    &lt;div class=&quot;modal-content&quot;&gt;&#13;&#10;        &lt;!-- Replace inline onclick with button id --&gt;&#13;&#10;        &lt;button type=&quot;button&quot; class=&quot;modal-close&quot; id=&quot;closeLoginBtn&quot; aria-label=&quot;Cerrar&quot;&gt;&amp;times;&lt;/button&gt;&#13;&#10;        &lt;h3&gt;Iniciar Sesión&lt;/h3&gt;&#13;&#10;        &lt;p&gt;Usa tu cuenta de Google para acceder&lt;/p&gt;&#13;&#10;        &lt;!-- Programmatic render target --&gt;&#13;&#10;        &lt;div id=&quot;google-signin-button&quot;&gt;&lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/div&gt;&#13;&#10;&#13;&#10;&lt;!-- Hero Section --&gt;&#13;&#10;&lt;section class=&quot;hero with-server-bg&quot; id=&quot;inicio&quot;&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;div class=&quot;hero-content&quot;&gt;&#13;&#10;            &lt;h1&gt;BitHosting&lt;/h1&gt;&#13;&#10;            &lt;p&gt;Servidores virtuales de alto rendimiento con baja latencia, soporte en español y precios en pesos&lt;/p&gt;&#13;&#10;            &lt;a href=&quot;#pricing&quot; class=&quot;cta-button&quot;&gt;Ver Planes&lt;/a&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/section&gt;&#13;&#10;&lt;!-- Carousel Section --&gt;&#13;&#10;&lt;section class=&quot;carousel-section&quot;&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;h2 style=&quot;text-align: center; font-size: 2.5rem; margin-bottom: 2rem;&quot;&gt;Nuestros Servicios&lt;/h2&gt;&#13;&#10;        &lt;div class=&quot;carousel-container&quot;&gt;&#13;&#10;            &lt;div class=&quot;carousel-wrapper&quot; id=&quot;carouselWrapper&quot;&gt;&#13;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#13;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Datacenter&quot;&gt;&#13;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#13;&#10;                        &lt;h3&gt;Infraestructura Moderna&lt;/h3&gt;&#13;&#10;                        &lt;p&gt;Servidores de última generación con SSD y procesadores Intel de alto rendimiento&lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#13;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Conexión&quot;&gt;&#13;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#13;&#10;                        &lt;h3&gt;Conectividad Premium&lt;/h3&gt;&#13;&#10;                        &lt;p&gt;Conexión directa a Buenos Aires con latencia ultra baja para usuarios argentinos&lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#13;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1560472355-536de3962603?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Soporte&quot;&gt;&#13;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#13;&#10;                        &lt;h3&gt;Soporte 24/7&lt;/h3&gt;&#13;&#10;                        &lt;p&gt;Atención técnica especializada en español durante horarios comerciales argentinos&lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;                &lt;div class=&quot;carousel-slide&quot;&gt;&#13;&#10;                    &lt;img src=&quot;https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&amp;h=400&amp;fit=crop&quot; alt=&quot;Seguridad&quot;&gt;&#13;&#10;                    &lt;div class=&quot;carousel-caption&quot;&gt;&#13;&#10;                        &lt;h3&gt;Máxima Seguridad&lt;/h3&gt;&#13;&#10;                        &lt;p&gt;Backups automáticos, firewall configurado y monitoreo constante de todos los servicios&lt;/p&gt;&#13;&#10;                    &lt;/div&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;button class=&quot;carousel-nav carousel-prev&quot; onclick=&quot;changeSlide(-1)&quot;&gt;‹&lt;/button&gt;&#13;&#10;            &lt;button class=&quot;carousel-nav carousel-next&quot; onclick=&quot;changeSlide(1)&quot;&gt;›&lt;/button&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;div class=&quot;carousel-dots&quot;&gt;&#13;&#10;            &lt;span class=&quot;carousel-dot active&quot; onclick=&quot;currentSlide(1)&quot;&gt;&lt;/span&gt;&#13;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(2)&quot;&gt;&lt;/span&gt;&#13;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(3)&quot;&gt;&lt;/span&gt;&#13;&#10;            &lt;span class=&quot;carousel-dot&quot; onclick=&quot;currentSlide(4)&quot;&gt;&lt;/span&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/section&gt;&#13;&#10;&#13;&#10;&lt;!-- Features --&gt;&#13;&#10;&lt;section class=&quot;features&quot;&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;h2 style=&quot;text-align: center; font-size: 2.5rem; margin-bottom: 1rem;&quot;&gt;¿Por qué elegir VPS Argentina?&lt;/h2&gt;&#13;&#10;        &lt;div class=&quot;features-grid&quot;&gt;&#13;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;h3&gt;Servidores Locales&lt;/h3&gt;&#13;&#10;                &lt;p&gt;Ubicados en Buenos Aires para mínima latencia. Ideal para usuarios argentinos.&lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;⚡&lt;/div&gt;&#13;&#10;                &lt;h3&gt;Setup Instantáneo&lt;/h3&gt;&#13;&#10;                &lt;p&gt;Tu servidor listo en menos de 5 minutos. Sin esperas ni complicaciones.&lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;h3&gt;Soporte en Español&lt;/h3&gt;&#13;&#10;                &lt;p&gt;Atención técnica en tu idioma y horario argentino. WhatsApp directo.&lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div class=&quot;feature-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;feature-icon&quot;&gt;&lt;/div&gt;&#13;&#10;                &lt;h3&gt;Precios en Pesos&lt;/h3&gt;&#13;&#10;                &lt;p&gt;Sin fluctuaciones del dólar. Facturación local argentina.&lt;/p&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/section&gt;&#13;&#10;&#13;&#10;&lt;!-- Pricing --&gt;&#13;&#10;&lt;section class=&quot;pricing&quot; id=&quot;precios&quot;&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;h2&gt;Planes VPS Linux&lt;/h2&gt;&#13;&#10;        &lt;div class=&quot;pricing-grid&quot;&gt;&#13;&#10;            &lt;div class=&quot;pricing-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Mini&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$5000&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#13;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#13;&#10;                    &lt;li&gt;1 vCPU&lt;/li&gt;&#13;&#10;                    &lt;li&gt;250 MB RAM&lt;/li&gt;&#13;&#10;                    &lt;li&gt;5 GB SSD&lt;/li&gt;&#13;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Ubuntu/CentOS&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Acceso SSH&lt;/li&gt;&#13;&#10;                &lt;/ul&gt;&#13;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            &lt;div class=&quot;pricing-card popular&quot;&gt;&#13;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Estándar&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$15.000&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#13;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#13;&#10;                    &lt;li&gt;2 vCPU&lt;/li&gt;&#13;&#10;                    &lt;li&gt;2 GB RAM&lt;/li&gt;&#13;&#10;                    &lt;li&gt;50 GB SSD&lt;/li&gt;&#13;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Ubuntu/CentOS/Debian&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Backup Semanal&lt;/li&gt;&#13;&#10;                &lt;/ul&gt;&#13;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;&#13;&#10;            &lt;div class=&quot;pricing-card&quot;&gt;&#13;&#10;                &lt;div class=&quot;plan-name&quot;&gt;Profesional&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-price&quot;&gt;$25.000&lt;/div&gt;&#13;&#10;                &lt;div class=&quot;plan-period&quot;&gt;ARS / mes&lt;/div&gt;&#13;&#10;                &lt;ul class=&quot;plan-features&quot;&gt;&#13;&#10;                    &lt;li&gt;4 vCPU&lt;/li&gt;&#13;&#10;                    &lt;li&gt;4 GB RAM&lt;/li&gt;&#13;&#10;                    &lt;li&gt;80 GB SSD&lt;/li&gt;&#13;&#10;                    &lt;li&gt;1 IP Pública&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Todas las distros&lt;/li&gt;&#13;&#10;                    &lt;li&gt;Backup Diario&lt;/li&gt;&#13;&#10;                &lt;/ul&gt;&#13;&#10;                &lt;a href=&quot;#&quot; class=&quot;cta-button&quot;&gt;Elegir Plan&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/section&gt;&#13;&#10;&#13;&#10;&lt;!-- Footer --&gt;&#13;&#10;&lt;footer id=&quot;contacto&quot;&gt;&#13;&#10;    &lt;div class=&quot;container&quot;&gt;&#13;&#10;        &lt;div class=&quot;footer-content&quot;&gt;&#13;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#13;&#10;                &lt;h3&gt;Contacto&lt;/h3&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;WhatsApp: +54 9 11 XXXX-XXXX&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Email: soporte@XXXXX.com&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Buenos Aires, Argentina&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#13;&#10;                &lt;h3&gt;Servicios&lt;/h3&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;VPS Linux&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Migración Gratuita&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Soporte Técnico&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Backups&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;            &lt;div class=&quot;footer-section&quot;&gt;&#13;&#10;                &lt;h3&gt;Recursos&lt;/h3&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Documentación&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Tutoriales&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Estado del Servicio&lt;/a&gt;&#13;&#10;                &lt;a href=&quot;#&quot;&gt;Términos de Servicio&lt;/a&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;        &lt;p&gt;&amp;copy; 2025 BitHosting. Todos los derechos reservados.&lt;/p&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;&lt;/footer&gt;&#13;&#10;&#13;&#10;&lt;!-- Debug Info --&gt;&#13;&#10;&lt;div class=&quot;debug-info&quot; id=&quot;debugInfo&quot;&gt;&#13;&#10;    URL: &lt;span id=&quot;currentUrl&quot;&gt;&lt;/span&gt;&lt;br&gt;&#13;&#10;    Status: &lt;span id=&quot;authStatus&quot;&gt;No logueado&lt;/span&gt;&#13;&#10;&lt;/div&gt;&#13;&#10;&#13;&#10;&lt;script src=&quot;js/auth.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;script src=&quot;js/carousel.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;script src=&quot;js/main.js&quot;&gt;&lt;/script&gt;&#13;&#10;&lt;/body&gt;&#13;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/js/auth.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/js/auth.js" />
              <option name="originalContent" value="// Variables globales para autenticación&#10;let currentUser = null;&#10;let googleInitialized = false;&#10;&#10;// Restore session from localStorage (same browser/IP context)&#10;(function restoreSession() {&#10;    try {&#10;        const stored = localStorage.getItem('bh_currentUser');&#10;        if (stored) {&#10;            currentUser = JSON.parse(stored);&#10;            console.log('Sesión restaurada para:', currentUser?.email || currentUser?.name);&#10;        }&#10;    } catch (e) {&#10;        console.warn('No se pudo restaurar sesión:', e);&#10;    }&#10;})();&#10;&#10;// Helper: wait until Google library is available&#10;async function waitForGoogle(timeoutMs = 10000) {&#10;    const start = Date.now();&#10;    while (Date.now() - start &lt; timeoutMs) {&#10;        if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) return true;&#10;        await new Promise(r =&gt; setTimeout(r, 100));&#10;    }&#10;    return false;&#10;}&#10;&#10;// Inicializar Google Sign-In (resilient)&#10;async function initializeGoogleSignIn() {&#10;    console.log('Inicializando Google Sign-In...');&#10;&#10;    const ok = await waitForGoogle(10000);&#10;    if (!ok) {&#10;        console.error('Google Sign-In library not loaded aún');&#10;        const s = document.getElementById('authStatus');&#10;        if (s) s.textContent = 'Google no disponible';&#10;        return;&#10;    }&#10;&#10;    try {&#10;        google.accounts.id.initialize({&#10;            client_id: &quot;614144050505-a02n5fod2ofne58nt9i01tj5ok977eot.apps.googleusercontent.com&quot;,&#10;            callback: handleCredentialResponse,&#10;            auto_select: false,&#10;            cancel_on_tap_outside: true,&#10;            // Usar popup para ejecutar el callback en esta misma página&#10;            ux_mode: 'popup'&#10;            // login_uri eliminado para evitar modo redirect&#10;        });&#10;        googleInitialized = true;&#10;        console.log('Google Sign-In inicializado correctamente');&#10;        const s = document.getElementById('authStatus');&#10;        if (s) s.textContent = 'Google listo';&#10;    } catch (error) {&#10;        console.error('Error al inicializar Google Sign-In:', error);&#10;        const s = document.getElementById('authStatus');&#10;        if (s) s.textContent = 'Error: ' + error.message;&#10;    }&#10;}&#10;&#10;// Función de login (abre modal siempre y renderiza cuando esté listo)&#10;async function loginWithGoogle() {&#10;    console.log('Intentando login...');&#10;&#10;    // Abrir modal primero&#10;    showLoginModal();&#10;&#10;    const buttonContainer = document.getElementById('google-signin-button');&#10;    if (buttonContainer) buttonContainer.innerHTML = '&lt;div style=&quot;color:#666&quot;&gt;Cargando botón de Google...&lt;/div&gt;';&#10;&#10;    // Asegurar inicialización&#10;    if (!googleInitialized) {&#10;        await initializeGoogleSignIn();&#10;    }&#10;&#10;    // Esperar a que la librería esté lista y renderizar el botón&#10;    const ready = await waitForGoogle(10000);&#10;    if (ready) {&#10;        try {&#10;            buttonContainer.innerHTML = '';&#10;            google.accounts.id.renderButton(buttonContainer, {&#10;                theme: 'outline',&#10;                size: 'large',&#10;                width: 250,&#10;                text: 'signin_with',&#10;                shape: 'pill'&#10;            });&#10;            // Hide declarative fallback to avoid duplicate buttons&#10;            const fb = document.getElementById('google-signin-fallback');&#10;            if (fb) fb.style.display = 'none';&#10;        } catch (e) {&#10;            console.error('No se pudo renderizar el botón:', e);&#10;            buttonContainer.innerHTML = '&lt;p&gt;No se pudo cargar el botón de Google. Reintenta.&lt;/p&gt;';&#10;        }&#10;    } else {&#10;        console.error('Google no disponible tras esperar.');&#10;        if (buttonContainer) buttonContainer.innerHTML = '&lt;p&gt;Google no disponible. Reintenta en unos segundos.&lt;/p&gt;';&#10;        // Keep fallback visible&#10;        const fb = document.getElementById('google-signin-fallback');&#10;        if (fb) fb.style.display = '';&#10;    }&#10;}&#10;&#10;// Manejar respuesta de Google&#10;function handleCredentialResponse(response) {&#10;    console.log('Respuesta de Google recibida');&#10;&#10;    (async () =&gt; {&#10;        try {&#10;            if (!response || !response.credential) {&#10;                throw new Error('No se recibió credencial de Google');&#10;            }&#10;&#10;            // 1) Intentar crear sesión en el servidor con la credencial cruda (más robusto)&#10;            try {&#10;                const res = await fetch('/api/gsicred', {&#10;                    method: 'POST',&#10;                    headers: { 'Content-Type': 'application/json' },&#10;                    body: JSON.stringify({ credential: response.credential })&#10;                });&#10;                if (res.ok) {&#10;                    const data = await res.json();&#10;                    if (data &amp;&amp; data.user) {&#10;                        currentUser = data.user;&#10;                        try { localStorage.setItem('bh_currentUser', JSON.stringify(currentUser)); } catch {}&#10;                        updateUserInterface();&#10;                        closeLoginModal();&#10;                        console.log('Usuario logueado vía servidor:', currentUser);&#10;                        return; // listo&#10;                    }&#10;                }&#10;            } catch (e) {&#10;                console.warn('Fallo creando sesión en servidor con credencial directa, usando fallback local:', e);&#10;            }&#10;&#10;            // 2) Fallback: decodificar en el cliente y luego guardar sesión en servidor&#10;            const userInfo = parseJwt(response.credential);&#10;            if (!userInfo) throw new Error('No se pudo decodificar el token');&#10;&#10;            currentUser = {&#10;                name: userInfo.name,&#10;                email: userInfo.email,&#10;                picture: userInfo.picture,&#10;                sub: userInfo.sub&#10;            };&#10;&#10;            const ok = await setServerSession(currentUser);&#10;            try { localStorage.setItem('bh_currentUser', JSON.stringify(currentUser)); } catch {}&#10;            if (!ok) {&#10;                const s = document.getElementById('authStatus');&#10;                if (s) s.textContent = 'Error guardando sesión en servidor';&#10;                try { window.showNotification?.('No se pudo guardar la sesión en el servidor', 'error'); } catch {}&#10;            }&#10;            console.log('Usuario logueado (fallback):', currentUser);&#10;            updateUserInterface();&#10;            closeLoginModal();&#10;&#10;        } catch (error) {&#10;            console.error('Error al procesar login:', error);&#10;            try { window.showNotification?.(error.message || 'Error al iniciar sesión', 'error'); } catch {}&#10;            const s = document.getElementById('authStatus');&#10;            if (s) s.textContent = 'Error de login';&#10;        }&#10;    })();&#10;}&#10;&#10;// Surface GIS errors from declarative button&#10;function onGoogleSignInError(err) {&#10;    console.error('Google Sign-In error:', err);&#10;    const msg = (err &amp;&amp; (err.error || err.type || err.message)) || 'Fallo de Google Sign-In';&#10;    const s = document.getElementById('authStatus');&#10;    if (s) s.textContent = 'Google Sign-In: ' + msg;&#10;    try { window.showNotification?.('Google Sign-In: ' + msg, 'error'); } catch {}&#10;}&#10;&#10;// Decodificar JWT token&#10;function parseJwt(token) {&#10;    try {&#10;        const base64Url = token.split('.')[1];&#10;        if (!base64Url) return null;&#10;        // Convertir base64url a base64 y agregar padding si es necesario&#10;        let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');&#10;        const pad = base64.length % 4;&#10;        if (pad) base64 += '='.repeat(4 - pad);&#10;        const jsonPayload = decodeURIComponent(&#10;            atob(base64).split('').map(function(c) {&#10;                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);&#10;            }).join('')&#10;        );&#10;        return JSON.parse(jsonPayload);&#10;    } catch (error) {&#10;        console.error('Error al parsear JWT:', error);&#10;        return null;&#10;    }&#10;}&#10;&#10;&#10;// Mostrar modal de login&#10;function showLoginModal() {&#10;    const modal = document.getElementById('loginModal');&#10;    modal.classList.add('show');&#10;&#10;    const buttonContainer = document.getElementById('google-signin-button');&#10;    if (!buttonContainer) return;&#10;&#10;    // Show loading state&#10;    buttonContainer.innerHTML = '&lt;div style=&quot;color:#666&quot;&gt;Cargando botón de Google...&lt;/div&gt;';&#10;&#10;    const renderBtn = () =&gt; {&#10;        try {&#10;            buttonContainer.innerHTML = '';&#10;            google.accounts.id.renderButton(buttonContainer, {&#10;                theme: 'outline',&#10;                size: 'large',&#10;                width: 280,&#10;                text: 'signin_with',&#10;                shape: 'pill'&#10;            });&#10;            // Hide declarative fallback to avoid duplicate buttons&#10;            const fb = document.getElementById('google-signin-fallback');&#10;            if (fb) fb.style.display = 'none';&#10;            return true;&#10;        } catch (e) {&#10;            return false;&#10;        }&#10;    };&#10;&#10;    // If library is already ready, render immediately&#10;    if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) {&#10;        renderBtn();&#10;        return;&#10;    }&#10;&#10;    // Start initialization in background if not done yet&#10;    (async () =&gt; {&#10;        try {&#10;            if (!googleInitialized) {&#10;                await initializeGoogleSignIn();&#10;            }&#10;        } catch {}&#10;    })();&#10;&#10;    // Retry until the library is ready (max ~10s)&#10;    let tries = 0;&#10;    const iv = setInterval(() =&gt; {&#10;        tries++;&#10;        if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) {&#10;            clearInterval(iv);&#10;            if (!renderBtn()) {&#10;                buttonContainer.innerHTML = '&lt;p&gt;No se pudo cargar el botón de Google. Reintenta.&lt;/p&gt;';&#10;            }&#10;        } else if (tries &gt; 50) { // ~10s total&#10;            clearInterval(iv);&#10;            buttonContainer.innerHTML = '&lt;p&gt;Google no disponible. Reintenta en unos segundos.&lt;/p&gt;';&#10;            // Ensure fallback remains visible&#10;            const fb = document.getElementById('google-signin-fallback');&#10;            if (fb) fb.style.display = '';&#10;        }&#10;    }, 200);&#10;}&#10;&#10;// Cerrar modal&#10;function closeLoginModal() {&#10;    const modal = document.getElementById('loginModal');&#10;    modal.classList.remove('show');&#10;}&#10;&#10;// Actualizar interfaz de usuario&#10;function updateUserInterface() {&#10;    const loginBtn = document.getElementById('loginBtn');&#10;    const userProfile = document.getElementById('userProfile');&#10;    const userName = document.getElementById('userName');&#10;    const userAvatar = document.getElementById('userAvatar');&#10;    const miCuentaLink = document.getElementById('miCuentaLink');&#10;    const authStatus = document.getElementById('authStatus');&#10;&#10;    if (currentUser) {&#10;        // Usuario logueado&#10;        if (loginBtn) loginBtn.style.display = 'none';&#10;        if (userProfile) userProfile.classList.add('active');&#10;        if (miCuentaLink) miCuentaLink.style.display = 'block';&#10;&#10;        if (userName) userName.textContent = currentUser.name || currentUser.email || 'Usuario';&#10;        if (userAvatar) {&#10;            // Fallback seguro si la imagen no carga&#10;            const fallback = 'https://via.placeholder.com/40?text=' + encodeURIComponent((currentUser.name?.[0] || 'U').toUpperCase());&#10;            userAvatar.referrerPolicy = 'no-referrer';&#10;            userAvatar.alt = currentUser.name || 'Usuario';&#10;            userAvatar.onerror = () =&gt; { userAvatar.onerror = null; userAvatar.src = fallback; };&#10;            userAvatar.src = currentUser.picture || fallback;&#10;        }&#10;&#10;        if (authStatus) authStatus.textContent = 'Logueado: ' + (currentUser.name || '');&#10;    } else {&#10;        // Usuario no logueado&#10;        if (loginBtn) loginBtn.style.display = 'block';&#10;        if (userProfile) userProfile.classList.remove('active');&#10;        if (miCuentaLink) miCuentaLink.style.display = 'none';&#10;&#10;        if (authStatus) authStatus.textContent = 'No logueado';&#10;    }&#10;}&#10;&#10;// Toggle dropdown&#10;function toggleDropdown() {&#10;    const dropdown = document.getElementById('dropdownMenu');&#10;    dropdown.classList.toggle('show');&#10;}&#10;&#10;// Simple session API helpers&#10;async function getServerSession() {&#10;    try {&#10;        const res = await fetch('/api/session');&#10;        if (!res.ok) return null;&#10;        const data = await res.json();&#10;        return data?.user || null;&#10;    } catch { return null; }&#10;}&#10;async function setServerSession(user) {&#10;    try {&#10;        const res = await fetch('/api/session', {&#10;            method: 'POST',&#10;            headers: { 'Content-Type': 'application/json' },&#10;            body: JSON.stringify({ user })&#10;        });&#10;        if (!res.ok) throw new Error('HTTP ' + res.status);&#10;        return true;&#10;    } catch (e) {&#10;        console.error('No se pudo guardar la sesión en el servidor:', e);&#10;        return false;&#10;    }&#10;}&#10;async function clearServerSession() {&#10;    try {&#10;        const res = await fetch('/api/session', { method: 'DELETE' });&#10;        return !!res.ok;&#10;    } catch (e) {&#10;        console.warn('No se pudo limpiar la sesión del servidor:', e);&#10;        return false;&#10;    }&#10;}&#10;&#10;// On load, sync session from server (IP-based persistence)&#10;document.addEventListener('DOMContentLoaded', async () =&gt; {&#10;    const srvUser = await getServerSession();&#10;    if (srvUser) {&#10;        currentUser = srvUser;&#10;        try { updateUserInterface(); } catch {}&#10;    }&#10;    // Hook Panel de Control remains&#10;    const panelLink = document.querySelector('#dropdownMenu a[href=&quot;#panel&quot;]');&#10;    if (panelLink) {&#10;        panelLink.addEventListener('click', function(e) {&#10;            e.preventDefault();&#10;            openControlPanel();&#10;        });&#10;    }&#10;});&#10;&#10;// Persistent VPS store in localStorage&#10;const VPS_STORE_KEY = 'bh_vpsByUser';&#10;function loadVpsStore() {&#10;    try { return JSON.parse(localStorage.getItem(VPS_STORE_KEY) || '{}'); } catch { return {}; }&#10;}&#10;function saveVpsStore(store) {&#10;    try { localStorage.setItem(VPS_STORE_KEY, JSON.stringify(store)); } catch {}&#10;}&#10;&#10;// Generate or get user's VPS list (persisted as JSON in localStorage)&#10;function getUserVps(user) {&#10;    if (!user) return [];&#10;    const key = user.email || user.sub || 'anon';&#10;    const store = loadVpsStore();&#10;    if (!store[key]) {&#10;        const base = (user.sub ? parseInt(user.sub.slice(-3), 10) : (user.email?.length || 7)) || 7;&#10;        const count = Math.max(2, (base % 4) + 2);&#10;        const regions = ['Buenos Aires', 'Córdoba', 'Mendoza', 'Rosario'];&#10;        const statuses = ['running', 'stopped', 'pending'];&#10;        store[key] = Array.from({ length: count }).map((_, i) =&gt; {&#10;            const disk = [20, 40, 80, 160][(base + i) % 4];&#10;            const used = Math.min(disk - 1, Math.max(2, (disk * ((base + i) % 70 + 20) / 100) | 0));&#10;            return {&#10;                id: 'vps-' + (base + i),&#10;                name: `VPS-${(base + i) % 9999}`,&#10;                region: regions[(base + i) % regions.length],&#10;                status: statuses[(base + i) % statuses.length],&#10;                cpu: ((base + i) % 4) + 1 + ' vCPU',&#10;                ram: [512, 1024, 2048, 4096][(base + i) % 4] + ' MB',&#10;                disk: disk + ' GB',&#10;                used: used + ' GB'&#10;            };&#10;        });&#10;        saveVpsStore(store);&#10;    }&#10;    return store[key];&#10;}&#10;&#10;// Export user's VPS JSON&#10;function exportUserVpsJson(user) {&#10;    const data = getUserVps(user);&#10;    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });&#10;    const url = URL.createObjectURL(blob);&#10;    const a = document.createElement('a');&#10;    a.href = url;&#10;    a.download = 'vps.json';&#10;    document.body.appendChild(a);&#10;    a.click();&#10;    a.remove();&#10;    URL.revokeObjectURL(url);&#10;}&#10;&#10;// Open control panel in a new tab with user's VPS list and sidebar&#10;function openControlPanel() {&#10;    if (!currentUser) {&#10;        alert('Inicia sesión para ver tu panel.');&#10;        return;&#10;    }&#10;    const w = window.open('', '_blank');&#10;    if (!w) return;&#10;    const style = `&#10;        :root{--bg:#0b0f14;--header:#0d1117;--panel:#0f141b;--border:#161b22;--text:#e6edf3;--muted:#9ca3af;--accent:#00d4ff;}&#10;        *{box-sizing:border-box}&#10;        body{margin:0;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;background:var(--bg);color:var(--text)}&#10;        header{background:var(--header);color:var(--text);padding:16px 20px;position:sticky;top:0;z-index:20;border-bottom:1px solid var(--border)}&#10;        .layout{display:flex;min-height:calc(100vh - 66px)}&#10;        .sidebar{width:240px;background:#0c1219;border-right:1px solid var(--border);padding:16px;position:sticky;top:66px;align-self:flex-start;height:calc(100vh - 66px)}&#10;        .sb-title{font-weight:700;margin-bottom:12px}&#10;        .sb-nav{display:flex;flex-direction:column;gap:6px}&#10;        .sb-link{color:var(--text);text-decoration:none;padding:10px 12px;border-radius:8px;display:flex;gap:8px;align-items:center}&#10;        .sb-link:hover{background:#0f1722}&#10;        .content{flex:1;padding:24px}&#10;        .container{max-width:1100px;margin:0 auto}&#10;        .summary{background:var(--panel);border:1px solid var(--border);border-radius:10px;padding:16px;margin-bottom:16px}&#10;        .bar{height:12px;background:#0e1621;border-radius:999px;overflow:hidden;border:1px solid var(--border)}&#10;        .bar &gt; span{display:block;height:100%;background:linear-gradient(90deg,#00d4ff,#00b8e6);width:0%}&#10;        .bar-label{display:flex;justify-content:space-between;font-size:12px;color:var(--muted);margin-top:8px}&#10;        .list{margin-top:16px}&#10;        .card{background:var(--panel);border:1px solid var(--border);border-radius:10px;padding:16px;margin-bottom:12px;display:flex;justify-content:space-between;gap:16px;align-items:flex-start}&#10;        .meta{display:flex;gap:10px;flex-wrap:wrap;color:var(--muted);font-size:12px}&#10;        .badge{background:#111827;border:1px solid #1f2937;color:#9ca3af;border-radius:999px;padding:4px 10px;font-size:12px}&#10;        .name{font-weight:600;margin-bottom:8px}&#10;        .vbar{height:8px;background:#0e1621;border-radius:999px;overflow:hidden;border:1px solid var(--border);margin-top:8px}&#10;        .vbar &gt; span{display:block;height:100%;background:linear-gradient(90deg,#22c55e,#16a34a)}&#10;        .actions{display:flex;gap:8px;align-items:center}&#10;        a.btn{background:var(--accent);color:#001018;text-decoration:none;border-radius:8px;padding:10px 14px;font-weight:600}&#10;        a.btn:hover{background:#00b8e6}&#10;        a.btn.secondary{background:#111827;color:var(--text);border:1px solid #1f2937}&#10;        a.btn.secondary:hover{background:#0f1722}&#10;        a.btn.del{background:#ef4444;color:#fff}&#10;        a.btn.del:hover{background:#dc2626}&#10;        .muted{color:var(--muted);font-size:12px}&#10;    `;&#10;    const html = `&lt;!doctype html&gt;&lt;html lang=&quot;es&quot;&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;Panel - BitHosting&lt;/title&gt;&lt;style&gt;${style}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&#10;      &lt;header&gt;&lt;div class=&quot;container&quot;&gt;&lt;div style=&quot;display:flex;justify-content:space-between;align-items:center;gap:12px&quot;&gt;&lt;h1 style=&quot;margin:0;font-size:20px&quot;&gt;Panel de Control&lt;/h1&gt;&lt;div class=&quot;muted&quot;&gt;${currentUser.name} · ${currentUser.email}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/header&gt;&#10;      &lt;div class=&quot;layout&quot;&gt;&#10;        &lt;aside class=&quot;sidebar&quot;&gt;&#10;          &lt;div class=&quot;sb-title&quot;&gt;Navegación&lt;/div&gt;&#10;          &lt;nav class=&quot;sb-nav&quot;&gt;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Dashboard&lt;/a&gt;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Mis VPS&lt;/a&gt;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Facturación&lt;/a&gt;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Soporte&lt;/a&gt;&#10;          &lt;/nav&gt;&#10;        &lt;/aside&gt;&#10;        &lt;main class=&quot;content&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;section class=&quot;summary&quot;&gt;&#10;              &lt;div style=&quot;display:flex;justify-content:space-between;align-items:center;gap:12px;margin-bottom:10px&quot;&gt;&#10;                &lt;div&gt;&lt;strong&gt;Uso total de almacenamiento&lt;/strong&gt;&lt;/div&gt;&#10;                &lt;div style=&quot;display:flex;gap:8px;flex-wrap:wrap&quot;&gt;&#10;                  &lt;a href=&quot;#&quot; id=&quot;createVps&quot; class=&quot;btn secondary&quot;&gt;Crear VPS (debug)&lt;/a&gt;&#10;                  &lt;a href=&quot;#&quot; id=&quot;exportJson&quot; class=&quot;btn&quot;&gt;Exportar JSON&lt;/a&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;div class=&quot;bar&quot;&gt;&lt;span id=&quot;totalBarFill&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#10;              &lt;div class=&quot;bar-label&quot; id=&quot;totalBarLabel&quot;&gt;Cargando...&lt;/div&gt;&#10;            &lt;/section&gt;&#10;            &lt;section class=&quot;list&quot; id=&quot;vpsList&quot;&gt;&#10;              &lt;div class=&quot;muted&quot;&gt;Cargando VPS...&lt;/div&gt;&#10;            &lt;/section&gt;&#10;          &lt;/div&gt;&#10;        &lt;/main&gt;&#10;      &lt;/div&gt;&#10;      &lt;script&gt;&#10;        async function loadVps() {&#10;          try {&#10;            const res = await fetch('/api/vps');&#10;            const list = await res.json();&#10;            const totalDisk = list.reduce((s,v)=&gt;s+parseInt((v.disk||'0')),0);&#10;            const totalUsed = list.reduce((s,v)=&gt;s+parseInt((v.used||'0')),0);&#10;            const pct = totalDisk? Math.round((totalUsed/totalDisk)*100):0;&#10;            document.getElementById('totalBarFill').style.width = pct + '%';&#10;            document.getElementById('totalBarLabel').textContent = totalUsed + ' / ' + totalDisk + ' GB usados ('+pct+'%)';&#10;            const cards = list.map(item=&gt;{&#10;              const total = parseInt(item.disk||'0');&#10;              const used = parseInt(item.used||'0');&#10;              const p = total? Math.min(100, Math.round((used/total)*100)) : 0;&#10;              return \`&#10;                &lt;div class=\&quot;card\&quot; data-id=\&quot;${item.id}\&quot;&gt;\n                  &lt;div style=\&quot;flex:1\&quot;&gt;\n                    &lt;div class=\&quot;name\&quot;&gt;${item.name} &lt;span class=\&quot;badge\&quot;&gt;${item.id}&lt;/span&gt;&lt;/div&gt;\n                    &lt;div class=\&quot;meta\&quot;&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.cpu}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.ram}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.disk}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.region}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.status}&lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\&quot;vbar\&quot;&gt;&lt;span style=\&quot;width:${p}%\&quot;&gt;&lt;/span&gt;&lt;/div&gt;\n                    &lt;div class=\&quot;bar-label\&quot;&gt;${used} / ${total} GB usados (${p}%)&lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=\&quot;actions\&quot;&gt;\n                    &lt;a href=\&quot;#\&quot; class=\&quot;btn del\&quot;&gt;Eliminar&lt;/a&gt;\n                    &lt;a href=\&quot;#\&quot; class=\&quot;btn\&quot;&gt;Administrar&lt;/a&gt;\n                  &lt;/div&gt;\n                &lt;/div&gt;\`&#10;            }).join('');&#10;            document.getElementById('vpsList').innerHTML = cards || '&lt;div class=&quot;muted&quot;&gt;Sin VPS&lt;/div&gt;';&#10;          } catch (e) {&#10;            document.getElementById('vpsList').innerHTML = '&lt;div class=&quot;muted&quot;&gt;Error al cargar VPS&lt;/div&gt;';&#10;          }&#10;        }&#10;        async function createVps() {&#10;          try {&#10;            await fetch('/api/vps', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({}) });&#10;            await loadVps();&#10;          } catch {}&#10;        }&#10;        async function deleteVps(id) {&#10;          try {&#10;            await fetch('/api/vps/' + encodeURIComponent(id), { method: 'DELETE' });&#10;            await loadVps();&#10;          } catch {}&#10;        }&#10;        document.addEventListener('click', (e)=&gt;{&#10;          const createBtn = e.target.closest('#createVps');&#10;          if (createBtn) { e.preventDefault(); createVps(); return; }&#10;          const delBtn = e.target.closest('.btn.del');&#10;          if (delBtn) {&#10;            e.preventDefault();&#10;            const card = delBtn.closest('.card');&#10;            const id = card?.getAttribute('data-id');&#10;            if (id) deleteVps(id);&#10;          }&#10;          const exp = e.target.closest('#exportJson');&#10;          if (exp) {&#10;            e.preventDefault();&#10;            (async ()=&gt;{&#10;              try {&#10;                const res = await fetch('/api/vps');&#10;                const list = await res.json();&#10;                const url = URL.createObjectURL(new Blob([JSON.stringify(list,null,2)],{type:'application/json'}));&#10;                const a = document.createElement('a'); a.href = url; a.download = 'vps.json'; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);&#10;              } catch {}&#10;            })();&#10;          }&#10;        });&#10;        loadVps();&#10;      &lt;/script&gt;&#10;    &lt;/body&gt;&lt;/html&gt;`;&#10;    w.document.open();&#10;    w.document.write(html);&#10;    w.document.close();&#10;    const dropdown = document.getElementById('dropdownMenu');&#10;    if (dropdown) dropdown.classList.remove('show');&#10;}&#10;&#10;// Logout&#10;function logout() {&#10;    console.log('Cerrando sesión...');&#10;    currentUser = null;&#10;    updateUserInterface();&#10;    clearServerSession();&#10;&#10;    // Clear local storage persisted user&#10;    try { localStorage.removeItem('bh_currentUser'); } catch {}&#10;&#10;    // Cerrar dropdown&#10;    document.getElementById('dropdownMenu').classList.remove('show');&#10;&#10;    // Opcional: revocar acceso de Google&#10;    if (googleInitialized) {&#10;        google.accounts.id.disableAutoSelect();&#10;    }&#10;}&#10;&#10;// Provide safe global stubs so inline handlers exist immediately&#10;window.loginWithGoogle = window.loginWithGoogle || function() {&#10;    try { document.getElementById('loginModal')?.classList.add('show'); } catch {}&#10;};&#10;window.closeLoginModal = window.closeLoginModal || function() {&#10;    try { document.getElementById('loginModal')?.classList.remove('show'); } catch {}&#10;};&#10;window.toggleDropdown = window.toggleDropdown || function() {&#10;    const dd = document.getElementById('dropdownMenu'); if (dd) dd.classList.toggle('show');&#10;};&#10;window.logout = window.logout || function() { console.warn('Logout not ready'); };&#10;&#10;// Expose functions to global scope for inline handlers&#10;window.initializeGoogleSignIn = initializeGoogleSignIn;&#10;window.updateUserInterface = updateUserInterface;&#10;window.openControlPanel = openControlPanel;&#10;// Ensure real implementations are exported for inline handlers&#10;window.loginWithGoogle = loginWithGoogle;&#10;window.closeLoginModal = closeLoginModal;&#10;window.toggleDropdown = toggleDropdown;&#10;window.logout = logout;&#10;&#10;// Ensure declarative callback is globally accessible&#10;window.handleCredentialResponse = handleCredentialResponse;&#10;window.onGoogleSignInError = onGoogleSignInError;&#10;" />
              <option name="updatedContent" value="// Variables globales para autenticación&#13;&#10;let currentUser = null;&#13;&#10;let googleInitialized = false;&#13;&#10;&#13;&#10;// Restore session from localStorage (same browser/IP context)&#13;&#10;(function restoreSession() {&#13;&#10;    try {&#13;&#10;        const stored = localStorage.getItem('bh_currentUser');&#13;&#10;        if (stored) {&#13;&#10;            currentUser = JSON.parse(stored);&#13;&#10;            console.log('Sesión restaurada para:', currentUser?.email || currentUser?.name);&#13;&#10;        }&#13;&#10;    } catch (e) {&#13;&#10;        console.warn('No se pudo restaurar sesión:', e);&#13;&#10;    }&#13;&#10;})();&#13;&#10;&#13;&#10;// Helper: wait until Google library is available&#13;&#10;async function waitForGoogle(timeoutMs = 10000) {&#13;&#10;    const start = Date.now();&#13;&#10;    while (Date.now() - start &lt; timeoutMs) {&#13;&#10;        if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) return true;&#13;&#10;        await new Promise(r =&gt; setTimeout(r, 100));&#13;&#10;    }&#13;&#10;    return false;&#13;&#10;}&#13;&#10;&#13;&#10;// Inicializar Google Sign-In (resilient)&#13;&#10;async function initializeGoogleSignIn() {&#13;&#10;    console.log('Inicializando Google Sign-In...');&#13;&#10;&#13;&#10;    const ok = await waitForGoogle(10000);&#13;&#10;    if (!ok) {&#13;&#10;        console.error('Google Sign-In library not loaded aún');&#13;&#10;        const s = document.getElementById('authStatus');&#13;&#10;        if (s) s.textContent = 'Google no disponible';&#13;&#10;        return;&#13;&#10;    }&#13;&#10;&#13;&#10;    try {&#13;&#10;        google.accounts.id.initialize({&#13;&#10;            client_id: &quot;614144050505-a02n5fod2ofne58nt9i01tj5ok977eot.apps.googleusercontent.com&quot;,&#13;&#10;            callback: handleCredentialResponse,&#13;&#10;            auto_select: false,&#13;&#10;            cancel_on_tap_outside: true,&#13;&#10;            // Usar popup para ejecutar el callback en esta misma página&#13;&#10;            ux_mode: 'popup'&#13;&#10;            // login_uri eliminado para evitar modo redirect&#13;&#10;        });&#13;&#10;        googleInitialized = true;&#13;&#10;        console.log('Google Sign-In inicializado correctamente');&#13;&#10;        const s = document.getElementById('authStatus');&#13;&#10;        if (s) s.textContent = 'Google listo';&#13;&#10;    } catch (error) {&#13;&#10;        console.error('Error al inicializar Google Sign-In:', error);&#13;&#10;        const s = document.getElementById('authStatus');&#13;&#10;        if (s) s.textContent = 'Error: ' + error.message;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// Función de login (abre modal y delega render en showLoginModal para evitar duplicados)&#13;&#10;async function loginWithGoogle() {&#13;&#10;    console.log('Intentando login...');&#13;&#10;&#13;&#10;    // Abrir modal primero&#13;&#10;    showLoginModal();&#13;&#10;&#13;&#10;    // Asegurar inicialización en segundo plano; el render lo hace showLoginModal&#13;&#10;    if (!googleInitialized) {&#13;&#10;        try { await initializeGoogleSignIn(); } catch {}&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// Manejar respuesta de Google&#13;&#10;function handleCredentialResponse(response) {&#13;&#10;    console.log('Respuesta de Google recibida');&#13;&#10;&#13;&#10;    (async () =&gt; {&#13;&#10;        try {&#13;&#10;            if (!response || !response.credential) {&#13;&#10;                throw new Error('No se recibió credencial de Google');&#13;&#10;            }&#13;&#10;&#13;&#10;            // 1) Intentar crear sesión en el servidor con la credencial cruda (más robusto)&#13;&#10;            try {&#13;&#10;                const res = await fetch('/api/gsicred', {&#13;&#10;                    method: 'POST',&#13;&#10;                    headers: { 'Content-Type': 'application/json' },&#13;&#10;                    body: JSON.stringify({ credential: response.credential })&#13;&#10;                });&#13;&#10;                if (res.ok) {&#13;&#10;                    const data = await res.json();&#13;&#10;                    if (data &amp;&amp; data.user) {&#13;&#10;                        currentUser = data.user;&#13;&#10;                        try { localStorage.setItem('bh_currentUser', JSON.stringify(currentUser)); } catch {}&#13;&#10;                        updateUserInterface();&#13;&#10;                        closeLoginModal();&#13;&#10;                        console.log('Usuario logueado vía servidor:', currentUser);&#13;&#10;                        return; // listo&#13;&#10;                    }&#13;&#10;                }&#13;&#10;            } catch (e) {&#13;&#10;                console.warn('Fallo creando sesión en servidor con credencial directa, usando fallback local:', e);&#13;&#10;            }&#13;&#10;&#13;&#10;            // 2) Fallback: decodificar en el cliente y luego guardar sesión en servidor&#13;&#10;            const userInfo = parseJwt(response.credential);&#13;&#10;            if (!userInfo) throw new Error('No se pudo decodificar el token');&#13;&#10;&#13;&#10;            currentUser = {&#13;&#10;                name: userInfo.name,&#13;&#10;                email: userInfo.email,&#13;&#10;                picture: userInfo.picture,&#13;&#10;                sub: userInfo.sub&#13;&#10;            };&#13;&#10;&#13;&#10;            const ok = await setServerSession(currentUser);&#13;&#10;            try { localStorage.setItem('bh_currentUser', JSON.stringify(currentUser)); } catch {}&#13;&#10;            if (!ok) {&#13;&#10;                const s = document.getElementById('authStatus');&#13;&#10;                if (s) s.textContent = 'Error guardando sesión en servidor';&#13;&#10;                try { window.showNotification?.('No se pudo guardar la sesión en el servidor', 'error'); } catch {}&#13;&#10;            }&#13;&#10;            console.log('Usuario logueado (fallback):', currentUser);&#13;&#10;            updateUserInterface();&#13;&#10;            closeLoginModal();&#13;&#10;&#13;&#10;        } catch (error) {&#13;&#10;            console.error('Error al procesar login:', error);&#13;&#10;            try { window.showNotification?.(error.message || 'Error al iniciar sesión', 'error'); } catch {}&#13;&#10;            const s = document.getElementById('authStatus');&#13;&#10;            if (s) s.textContent = 'Error de login';&#13;&#10;        }&#13;&#10;    })();&#13;&#10;}&#13;&#10;&#13;&#10;// Surface GIS errors from declarative button&#13;&#10;function onGoogleSignInError(err) {&#13;&#10;    console.error('Google Sign-In error:', err);&#13;&#10;    const msg = (err &amp;&amp; (err.error || err.type || err.message)) || 'Fallo de Google Sign-In';&#13;&#10;    const s = document.getElementById('authStatus');&#13;&#10;    if (s) s.textContent = 'Google Sign-In: ' + msg;&#13;&#10;    try { window.showNotification?.('Google Sign-In: ' + msg, 'error'); } catch {}&#13;&#10;}&#13;&#10;&#13;&#10;// Decodificar JWT token&#13;&#10;function parseJwt(token) {&#13;&#10;    try {&#13;&#10;        const base64Url = token.split('.')[1];&#13;&#10;        if (!base64Url) return null;&#13;&#10;        // Convertir base64url a base64 y agregar padding si es necesario&#13;&#10;        let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');&#13;&#10;        const pad = base64.length % 4;&#13;&#10;        if (pad) base64 += '='.repeat(4 - pad);&#13;&#10;        const jsonPayload = decodeURIComponent(&#13;&#10;            atob(base64).split('').map(function(c) {&#13;&#10;                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);&#13;&#10;            }).join('')&#13;&#10;        );&#13;&#10;        return JSON.parse(jsonPayload);&#13;&#10;    } catch (error) {&#13;&#10;        console.error('Error al parsear JWT:', error);&#13;&#10;        return null;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;&#13;&#10;// Mostrar modal de login&#13;&#10;function showLoginModal() {&#13;&#10;    const modal = document.getElementById('loginModal');&#13;&#10;    modal.classList.add('show');&#13;&#10;&#13;&#10;    const buttonContainer = document.getElementById('google-signin-button');&#13;&#10;    if (!buttonContainer) return;&#13;&#10;&#13;&#10;    // Show loading state&#13;&#10;    buttonContainer.innerHTML = '&lt;div style=&quot;color:#666&quot;&gt;Cargando botón de Google...&lt;/div&gt;';&#13;&#10;&#13;&#10;    const renderBtn = () =&gt; {&#13;&#10;        try {&#13;&#10;            buttonContainer.innerHTML = '';&#13;&#10;            google.accounts.id.renderButton(buttonContainer, {&#13;&#10;                theme: 'outline',&#13;&#10;                size: 'large',&#13;&#10;                width: 280,&#13;&#10;                text: 'signin_with',&#13;&#10;                shape: 'pill'&#13;&#10;            });&#13;&#10;            const fb = document.getElementById('google-signin-fallback');&#13;&#10;            if (fb) fb.style.display = 'none';&#13;&#10;            return true;&#13;&#10;        } catch (e) {&#13;&#10;            return false;&#13;&#10;        }&#13;&#10;    };&#13;&#10;&#13;&#10;    // Si ya está lista la librería, render inmediato (una sola vez)&#13;&#10;    if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) {&#13;&#10;        if (!renderBtn()) {&#13;&#10;            buttonContainer.innerHTML = '&lt;p&gt;No se pudo cargar el botón de Google. Reintenta.&lt;/p&gt;';&#13;&#10;        }&#13;&#10;        return;&#13;&#10;    }&#13;&#10;&#13;&#10;    // Iniciar inicialización en segundo plano si no se hizo&#13;&#10;    (async () =&gt; {&#13;&#10;        try {&#13;&#10;            if (!googleInitialized) {&#13;&#10;                await initializeGoogleSignIn();&#13;&#10;            }&#13;&#10;        } catch {}&#13;&#10;    })();&#13;&#10;&#13;&#10;    // Reintentar hasta que la librería esté lista (máx ~10s)&#13;&#10;    let tries = 0;&#13;&#10;    const iv = setInterval(() =&gt; {&#13;&#10;        tries++;&#13;&#10;        if (typeof google !== 'undefined' &amp;&amp; google?.accounts?.id) {&#13;&#10;            clearInterval(iv);&#13;&#10;            if (!renderBtn()) {&#13;&#10;                buttonContainer.innerHTML = '&lt;p&gt;No se pudo cargar el botón de Google. Reintenta.&lt;/p&gt;';&#13;&#10;            }&#13;&#10;        } else if (tries &gt; 50) { // ~10s total&#13;&#10;            clearInterval(iv);&#13;&#10;            buttonContainer.innerHTML = '&lt;p&gt;Google no disponible. Reintenta en unos segundos.&lt;/p&gt;';&#13;&#10;            const fb = document.getElementById('google-signin-fallback');&#13;&#10;            if (fb) fb.style.display = '';&#13;&#10;        }&#13;&#10;    }, 200);&#13;&#10;}&#13;&#10;&#13;&#10;// Cerrar modal&#13;&#10;function closeLoginModal() {&#13;&#10;    const modal = document.getElementById('loginModal');&#13;&#10;    modal.classList.remove('show');&#13;&#10;}&#13;&#10;&#13;&#10;// Util: generar avatar como data URL (SVG) con la inicial del usuario&#13;&#10;function makeAvatarDataUrl(initial = 'U') {&#13;&#10;    const ch = encodeURIComponent((initial || 'U').toUpperCase());&#13;&#10;    const svg = `&lt;svg xmlns='http://www.w3.org/2000/svg' width='40' height='40'&gt;&#13;&#10;      &lt;defs&gt;&#13;&#10;        &lt;linearGradient id='g' x1='0' y1='0' x2='1' y2='1'&gt;&#13;&#10;          &lt;stop offset='0%' stop-color='#00d4ff'/&gt;&#13;&#10;          &lt;stop offset='100%' stop-color='#00b8e6'/&gt;&#13;&#10;        &lt;/linearGradient&gt;&#13;&#10;      &lt;/defs&gt;&#13;&#10;      &lt;rect rx='20' ry='20' width='40' height='40' fill='url(#g)'/&gt;&#13;&#10;      &lt;text x='50%' y='50%' dominant-baseline='middle' text-anchor='middle' font-family='Segoe UI, Roboto, sans-serif' font-size='20' fill='#001018'&gt;${ch}&lt;/text&gt;&#13;&#10;    &lt;/svg&gt;`;&#13;&#10;    return 'data:image/svg+xml;utf8,' + svg;&#13;&#10;}&#13;&#10;&#13;&#10;// Actualizar interfaz de usuario&#13;&#10;function updateUserInterface() {&#13;&#10;    const loginBtn = document.getElementById('loginBtn');&#13;&#10;    const userProfile = document.getElementById('userProfile');&#13;&#10;    const userName = document.getElementById('userName');&#13;&#10;    const userAvatar = document.getElementById('userAvatar');&#13;&#10;    const miCuentaLink = document.getElementById('miCuentaLink');&#13;&#10;    const authStatus = document.getElementById('authStatus');&#13;&#10;&#13;&#10;    if (currentUser) {&#13;&#10;        // Usuario logueado&#13;&#10;        if (loginBtn) loginBtn.style.display = 'none';&#13;&#10;        if (userProfile) userProfile.classList.add('active');&#13;&#10;        if (miCuentaLink) miCuentaLink.style.display = 'block';&#13;&#10;&#13;&#10;        if (userName) userName.textContent = currentUser.name || currentUser.email || 'Usuario';&#13;&#10;        if (userAvatar) {&#13;&#10;            const fallback = makeAvatarDataUrl(currentUser.name?.[0] || currentUser.email?.[0] || 'U');&#13;&#10;            userAvatar.referrerPolicy = 'no-referrer';&#13;&#10;            userAvatar.alt = currentUser.name || 'Usuario';&#13;&#10;            userAvatar.onerror = () =&gt; { userAvatar.onerror = null; userAvatar.src = fallback; };&#13;&#10;            userAvatar.src = currentUser.picture || fallback;&#13;&#10;        }&#13;&#10;&#13;&#10;        if (authStatus) authStatus.textContent = 'Logueado: ' + (currentUser.name || '');&#13;&#10;    } else {&#13;&#10;        // Usuario no logueado&#13;&#10;        if (loginBtn) loginBtn.style.display = 'block';&#13;&#10;        if (userProfile) userProfile.classList.remove('active');&#13;&#10;        if (miCuentaLink) miCuentaLink.style.display = 'none';&#13;&#10;&#13;&#10;        if (authStatus) authStatus.textContent = 'No logueado';&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// Toggle dropdown&#13;&#10;function toggleDropdown() {&#13;&#10;    const dropdown = document.getElementById('dropdownMenu');&#13;&#10;    dropdown.classList.toggle('show');&#13;&#10;}&#13;&#10;&#13;&#10;// Simple session API helpers&#13;&#10;async function getServerSession() {&#13;&#10;    try {&#13;&#10;        const res = await fetch('/api/session');&#13;&#10;        if (!res.ok) return null;&#13;&#10;        const data = await res.json();&#13;&#10;        return data?.user || null;&#13;&#10;    } catch { return null; }&#13;&#10;}&#13;&#10;async function setServerSession(user) {&#13;&#10;    try {&#13;&#10;        const res = await fetch('/api/session', {&#13;&#10;            method: 'POST',&#13;&#10;            headers: { 'Content-Type': 'application/json' },&#13;&#10;            body: JSON.stringify({ user })&#13;&#10;        });&#13;&#10;        if (!res.ok) throw new Error('HTTP ' + res.status);&#13;&#10;        return true;&#13;&#10;    } catch (e) {&#13;&#10;        console.error('No se pudo guardar la sesión en el servidor:', e);&#13;&#10;        return false;&#13;&#10;    }&#13;&#10;}&#13;&#10;async function clearServerSession() {&#13;&#10;    try {&#13;&#10;        const res = await fetch('/api/session', { method: 'DELETE' });&#13;&#10;        return !!res.ok;&#13;&#10;    } catch (e) {&#13;&#10;        console.warn('No se pudo limpiar la sesión del servidor:', e);&#13;&#10;        return false;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// On load, sync session from server (IP-based persistence)&#13;&#10;document.addEventListener('DOMContentLoaded', async () =&gt; {&#13;&#10;    const srvUser = await getServerSession();&#13;&#10;    if (srvUser) {&#13;&#10;        currentUser = srvUser;&#13;&#10;        try { updateUserInterface(); } catch {}&#13;&#10;    }&#13;&#10;    // Hook Panel de Control remains&#13;&#10;    const panelLink = document.querySelector('#dropdownMenu a[href=&quot;#panel&quot;]');&#13;&#10;    if (panelLink) {&#13;&#10;        panelLink.addEventListener('click', function(e) {&#13;&#10;            e.preventDefault();&#13;&#10;            openControlPanel();&#13;&#10;        });&#13;&#10;    }&#13;&#10;});&#13;&#10;&#13;&#10;// Persistent VPS store in localStorage&#13;&#10;const VPS_STORE_KEY = 'bh_vpsByUser';&#13;&#10;function loadVpsStore() {&#13;&#10;    try { return JSON.parse(localStorage.getItem(VPS_STORE_KEY) || '{}'); } catch { return {}; }&#13;&#10;}&#13;&#10;function saveVpsStore(store) {&#13;&#10;    try { localStorage.setItem(VPS_STORE_KEY, JSON.stringify(store)); } catch {}&#13;&#10;}&#13;&#10;&#13;&#10;// Generate or get user's VPS list (persisted as JSON in localStorage)&#13;&#10;function getUserVps(user) {&#13;&#10;    if (!user) return [];&#13;&#10;    const key = user.email || user.sub || 'anon';&#13;&#10;    const store = loadVpsStore();&#13;&#10;    if (!store[key]) {&#13;&#10;        const base = (user.sub ? parseInt(user.sub.slice(-3), 10) : (user.email?.length || 7)) || 7;&#13;&#10;        const count = Math.max(2, (base % 4) + 2);&#13;&#10;        const regions = ['Buenos Aires', 'Córdoba', 'Mendoza', 'Rosario'];&#13;&#10;        const statuses = ['running', 'stopped', 'pending'];&#13;&#10;        store[key] = Array.from({ length: count }).map((_, i) =&gt; {&#13;&#10;            const disk = [20, 40, 80, 160][(base + i) % 4];&#13;&#10;            const used = Math.min(disk - 1, Math.max(2, (disk * ((base + i) % 70 + 20) / 100) | 0));&#13;&#10;            return {&#13;&#10;                id: 'vps-' + (base + i),&#13;&#10;                name: `VPS-${(base + i) % 9999}`,&#13;&#10;                region: regions[(base + i) % regions.length],&#13;&#10;                status: statuses[(base + i) % statuses.length],&#13;&#10;                cpu: ((base + i) % 4) + 1 + ' vCPU',&#13;&#10;                ram: [512, 1024, 2048, 4096][(base + i) % 4] + ' MB',&#13;&#10;                disk: disk + ' GB',&#13;&#10;                used: used + ' GB'&#13;&#10;            };&#13;&#10;        });&#13;&#10;        saveVpsStore(store);&#13;&#10;    }&#13;&#10;    return store[key];&#13;&#10;}&#13;&#10;&#13;&#10;// Export user's VPS JSON&#13;&#10;function exportUserVpsJson(user) {&#13;&#10;    const data = getUserVps(user);&#13;&#10;    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });&#13;&#10;    const url = URL.createObjectURL(blob);&#13;&#10;    const a = document.createElement('a');&#13;&#10;    a.href = url;&#13;&#10;    a.download = 'vps.json';&#13;&#10;    document.body.appendChild(a);&#13;&#10;    a.click();&#13;&#10;    a.remove();&#13;&#10;    URL.revokeObjectURL(url);&#13;&#10;}&#13;&#10;&#13;&#10;// Open control panel in a new tab with user's VPS list and sidebar&#13;&#10;function openControlPanel() {&#13;&#10;    if (!currentUser) {&#13;&#10;        alert('Inicia sesión para ver tu panel.');&#13;&#10;        return;&#13;&#10;    }&#13;&#10;    const w = window.open('', '_blank');&#13;&#10;    if (!w) return;&#13;&#10;    const style = `&#13;&#10;        :root{--bg:#0b0f14;--header:#0d1117;--panel:#0f141b;--border:#161b22;--text:#e6edf3;--muted:#9ca3af;--accent:#00d4ff;}&#13;&#10;        *{box-sizing:border-box}&#13;&#10;        body{margin:0;font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,sans-serif;background:var(--bg);color:var(--text)}&#13;&#10;        header{background:var(--header);color:var(--text);padding:16px 20px;position:sticky;top:0;z-index:20;border-bottom:1px solid var(--border)}&#13;&#10;        .layout{display:flex;min-height:calc(100vh - 66px)}&#13;&#10;        .sidebar{width:240px;background:#0c1219;border-right:1px solid var(--border);padding:16px;position:sticky;top:66px;align-self:flex-start;height:calc(100vh - 66px)}&#13;&#10;        .sb-title{font-weight:700;margin-bottom:12px}&#13;&#10;        .sb-nav{display:flex;flex-direction:column;gap:6px}&#13;&#10;        .sb-link{color:var(--text);text-decoration:none;padding:10px 12px;border-radius:8px;display:flex;gap:8px;align-items:center}&#13;&#10;        .sb-link:hover{background:#0f1722}&#13;&#10;        .content{flex:1;padding:24px}&#13;&#10;        .container{max-width:1100px;margin:0 auto}&#13;&#10;        .summary{background:var(--panel);border:1px solid var(--border);border-radius:10px;padding:16px;margin-bottom:16px}&#13;&#10;        .bar{height:12px;background:#0e1621;border-radius:999px;overflow:hidden;border:1px solid var(--border)}&#13;&#10;        .bar &gt; span{display:block;height:100%;background:linear-gradient(90deg,#00d4ff,#00b8e6);width:0%}&#13;&#10;        .bar-label{display:flex;justify-content:space-between;font-size:12px;color:var(--muted);margin-top:8px}&#13;&#10;        .list{margin-top:16px}&#13;&#10;        .card{background:var(--panel);border:1px solid var(--border);border-radius:10px;padding:16px;margin-bottom:12px;display:flex;justify-content:space-between;gap:16px;align-items:flex-start}&#13;&#10;        .meta{display:flex;gap:10px;flex-wrap:wrap;color:var(--muted);font-size:12px}&#13;&#10;        .badge{background:#111827;border:1px solid #1f2937;color:#9ca3af;border-radius:999px;padding:4px 10px;font-size:12px}&#13;&#10;        .name{font-weight:600;margin-bottom:8px}&#13;&#10;        .vbar{height:8px;background:#0e1621;border-radius:999px;overflow:hidden;border:1px solid var(--border);margin-top:8px}&#13;&#10;        .vbar &gt; span{display:block;height:100%;background:linear-gradient(90deg,#22c55e,#16a34a)}&#13;&#10;        .actions{display:flex;gap:8px;align-items:center}&#13;&#10;        a.btn{background:var(--accent);color:#001018;text-decoration:none;border-radius:8px;padding:10px 14px;font-weight:600}&#13;&#10;        a.btn:hover{background:#00b8e6}&#13;&#10;        a.btn.secondary{background:#111827;color:var(--text);border:1px solid #1f2937}&#13;&#10;        a.btn.secondary:hover{background:#0f1722}&#13;&#10;        a.btn.del{background:#ef4444;color:#fff}&#13;&#10;        a.btn.del:hover{background:#dc2626}&#13;&#10;        .muted{color:var(--muted);font-size:12px}&#13;&#10;    `;&#13;&#10;    const html = `&lt;!doctype html&gt;&lt;html lang=&quot;es&quot;&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;title&gt;Panel - BitHosting&lt;/title&gt;&lt;style&gt;${style}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&#13;&#10;      &lt;header&gt;&lt;div class=&quot;container&quot;&gt;&lt;div style=&quot;display:flex;justify-content:space-between;align-items:center;gap:12px&quot;&gt;&lt;h1 style=&quot;margin:0;font-size:20px&quot;&gt;Panel de Control&lt;/h1&gt;&lt;div class=&quot;muted&quot;&gt;${currentUser.name} · ${currentUser.email}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/header&gt;&#13;&#10;      &lt;div class=&quot;layout&quot;&gt;&#13;&#10;        &lt;aside class=&quot;sidebar&quot;&gt;&#13;&#10;          &lt;div class=&quot;sb-title&quot;&gt;Navegación&lt;/div&gt;&#13;&#10;          &lt;nav class=&quot;sb-nav&quot;&gt;&#13;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Dashboard&lt;/a&gt;&#13;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Mis VPS&lt;/a&gt;&#13;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Facturación&lt;/a&gt;&#13;&#10;            &lt;a class=&quot;sb-link&quot; href=&quot;#&quot;&gt;Soporte&lt;/a&gt;&#13;&#10;          &lt;/nav&gt;&#13;&#10;        &lt;/aside&gt;&#13;&#10;        &lt;main class=&quot;content&quot;&gt;&#13;&#10;          &lt;div class=&quot;container&quot;&gt;&#13;&#10;            &lt;section class=&quot;summary&quot;&gt;&#13;&#10;              &lt;div style=&quot;display:flex;justify-content:space-between;align-items:center;gap:12px;margin-bottom:10px&quot;&gt;&#13;&#10;                &lt;div&gt;&lt;strong&gt;Uso total de almacenamiento&lt;/strong&gt;&lt;/div&gt;&#13;&#10;                &lt;div style=&quot;display:flex;gap:8px;flex-wrap:wrap&quot;&gt;&#13;&#10;                  &lt;a href=&quot;#&quot; id=&quot;createVps&quot; class=&quot;btn secondary&quot;&gt;Crear VPS (debug)&lt;/a&gt;&#13;&#10;                  &lt;a href=&quot;#&quot; id=&quot;exportJson&quot; class=&quot;btn&quot;&gt;Exportar JSON&lt;/a&gt;&#13;&#10;                &lt;/div&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;              &lt;div class=&quot;bar&quot;&gt;&lt;span id=&quot;totalBarFill&quot;&gt;&lt;/span&gt;&lt;/div&gt;&#13;&#10;              &lt;div class=&quot;bar-label&quot; id=&quot;totalBarLabel&quot;&gt;Cargando...&lt;/div&gt;&#13;&#10;            &lt;/section&gt;&#13;&#10;            &lt;section class=&quot;list&quot; id=&quot;vpsList&quot;&gt;&#13;&#10;              &lt;div class=&quot;muted&quot;&gt;Cargando VPS...&lt;/div&gt;&#13;&#10;            &lt;/section&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        &lt;/main&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;      &lt;script&gt;&#13;&#10;        async function loadVps() {&#13;&#10;          try {&#13;&#10;            const res = await fetch('/api/vps');&#13;&#10;            const list = await res.json();&#13;&#10;            const totalDisk = list.reduce((s,v)=&gt;s+parseInt((v.disk||'0')),0);&#13;&#10;            const totalUsed = list.reduce((s,v)=&gt;s+parseInt((v.used||'0')),0);&#13;&#10;            const pct = totalDisk? Math.round((totalUsed/totalDisk)*100):0;&#13;&#10;            document.getElementById('totalBarFill').style.width = pct + '%';&#13;&#10;            document.getElementById('totalBarLabel').textContent = totalUsed + ' / ' + totalDisk + ' GB usados ('+pct+'%)';&#13;&#10;            const cards = list.map(item=&gt;{&#13;&#10;              const total = parseInt(item.disk||'0');&#13;&#10;              const used = parseInt(item.used||'0');&#13;&#10;              const p = total? Math.min(100, Math.round((used/total)*100)) : 0;&#13;&#10;              return \`&#13;&#10;                &lt;div class=\&quot;card\&quot; data-id=\&quot;${item.id}\&quot;&gt;\n                  &lt;div style=\&quot;flex:1\&quot;&gt;\n                    &lt;div class=\&quot;name\&quot;&gt;${item.name} &lt;span class=\&quot;badge\&quot;&gt;${item.id}&lt;/span&gt;&lt;/div&gt;\n                    &lt;div class=\&quot;meta\&quot;&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.cpu}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.ram}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.disk}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.region}&lt;/span&gt;\n                      &lt;span class=\&quot;badge\&quot;&gt;${item.status}&lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;div class=\&quot;vbar\&quot;&gt;&lt;span style=\&quot;width:${p}%\&quot;&gt;&lt;/span&gt;&lt;/div&gt;\n                    &lt;div class=\&quot;bar-label\&quot;&gt;${used} / ${total} GB usados (${p}%)&lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=\&quot;actions\&quot;&gt;\n                    &lt;a href=\&quot;#\&quot; class=\&quot;btn del\&quot;&gt;Eliminar&lt;/a&gt;\n                    &lt;a href=\&quot;#\&quot; class=\&quot;btn\&quot;&gt;Administrar&lt;/a&gt;\n                  &lt;/div&gt;\n                &lt;/div&gt;\`&#13;&#10;            }).join('');&#13;&#10;            document.getElementById('vpsList').innerHTML = cards || '&lt;div class=&quot;muted&quot;&gt;Sin VPS&lt;/div&gt;';&#13;&#10;          } catch (e) {&#13;&#10;            document.getElementById('vpsList').innerHTML = '&lt;div class=&quot;muted&quot;&gt;Error al cargar VPS&lt;/div&gt;';&#13;&#10;          }&#13;&#10;        }&#13;&#10;        async function createVps() {&#13;&#10;          try {&#13;&#10;            await fetch('/api/vps', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({}) });&#13;&#10;            await loadVps();&#13;&#10;          } catch {}&#13;&#10;        }&#13;&#10;        async function deleteVps(id) {&#13;&#10;          try {&#13;&#10;            await fetch('/api/vps/' + encodeURIComponent(id), { method: 'DELETE' });&#13;&#10;            await loadVps();&#13;&#10;          } catch {}&#13;&#10;        }&#13;&#10;        document.addEventListener('click', (e)=&gt;{&#13;&#10;          const createBtn = e.target.closest('#createVps');&#13;&#10;          if (createBtn) { e.preventDefault(); createVps(); return; }&#13;&#10;          const delBtn = e.target.closest('.btn.del');&#13;&#10;          if (delBtn) {&#13;&#10;            e.preventDefault();&#13;&#10;            const card = delBtn.closest('.card');&#13;&#10;            const id = card?.getAttribute('data-id');&#13;&#10;            if (id) deleteVps(id);&#13;&#10;          }&#13;&#10;          const exp = e.target.closest('#exportJson');&#13;&#10;          if (exp) {&#13;&#10;            e.preventDefault();&#13;&#10;            (async ()=&gt;{&#13;&#10;              try {&#13;&#10;                const res = await fetch('/api/vps');&#13;&#10;                const list = await res.json();&#13;&#10;                const url = URL.createObjectURL(new Blob([JSON.stringify(list,null,2)],{type:'application/json'}));&#13;&#10;                const a = document.createElement('a'); a.href = url; a.download = 'vps.json'; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);&#13;&#10;              } catch {}&#13;&#10;            })();&#13;&#10;          }&#13;&#10;        });&#13;&#10;        loadVps();&#13;&#10;      &lt;/script&gt;&#13;&#10;    &lt;/body&gt;&lt;/html&gt;`;&#13;&#10;    w.document.open();&#13;&#10;    w.document.write(html);&#13;&#10;    w.document.close();&#13;&#10;    const dropdown = document.getElementById('dropdownMenu');&#13;&#10;    if (dropdown) dropdown.classList.remove('show');&#13;&#10;}&#13;&#10;&#13;&#10;// Logout&#13;&#10;function logout() {&#13;&#10;    console.log('Cerrando sesión...');&#13;&#10;    currentUser = null;&#13;&#10;    updateUserInterface();&#13;&#10;    clearServerSession();&#13;&#10;&#13;&#10;    // Clear local storage persisted user&#13;&#10;    try { localStorage.removeItem('bh_currentUser'); } catch {}&#13;&#10;&#13;&#10;    // Cerrar dropdown&#13;&#10;    document.getElementById('dropdownMenu').classList.remove('show');&#13;&#10;&#13;&#10;    // Opcional: revocar acceso de Google&#13;&#10;    if (googleInitialized) {&#13;&#10;        google.accounts.id.disableAutoSelect();&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// Provide safe global stubs so inline handlers exist immediately&#13;&#10;window.loginWithGoogle = window.loginWithGoogle || function() {&#13;&#10;    try { document.getElementById('loginModal')?.classList.add('show'); } catch {}&#13;&#10;};&#13;&#10;window.closeLoginModal = window.closeLoginModal || function() {&#13;&#10;    try { document.getElementById('loginModal')?.classList.remove('show'); } catch {}&#13;&#10;};&#13;&#10;window.toggleDropdown = window.toggleDropdown || function() {&#13;&#10;    const dd = document.getElementById('dropdownMenu'); if (dd) dd.classList.toggle('show');&#13;&#10;};&#13;&#10;window.logout = window.logout || function() { console.warn('Logout not ready'); };&#13;&#10;&#13;&#10;// Expose functions to global scope for inline handlers&#13;&#10;window.initializeGoogleSignIn = initializeGoogleSignIn;&#13;&#10;window.updateUserInterface = updateUserInterface;&#13;&#10;window.openControlPanel = openControlPanel;&#13;&#10;// Ensure real implementations are exported for inline handlers&#13;&#10;window.loginWithGoogle = loginWithGoogle;&#13;&#10;window.closeLoginModal = closeLoginModal;&#13;&#10;window.toggleDropdown = toggleDropdown;&#13;&#10;window.logout = logout;&#13;&#10;&#13;&#10;// Ensure declarative callback is globally accessible&#13;&#10;window.handleCredentialResponse = handleCredentialResponse;&#13;&#10;window.onGoogleSignInError = onGoogleSignInError;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/js/carousel.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/js/carousel.js" />
              <option name="originalContent" value="// Carousel functionality&#10;let currentSlideIndex = 0;&#10;const slides = document.querySelectorAll('.carousel-slide');&#10;const totalSlides = slides.length;&#10;const wrapper = document.getElementById('carouselWrapper');&#10;const dots = document.querySelectorAll('.carousel-dot');&#10;&#10;function updateCarousel() {&#10;    const translateX = -currentSlideIndex * 100;&#10;    wrapper.style.transform = `translateX(${translateX}%)`;&#10;&#10;function changeSlide(direction) {&#10;    currentSlideIndex += direction;&#10;&#10;    if (currentSlideIndex &gt;= totalSlides) {&#10;        currentSlideIndex = 0;&#10;    } else if (currentSlideIndex &lt; 0) {&#10;        currentSlideIndex = totalSlides - 1;&#10;    }&#10;&#10;    updateCarousel();&#10;}&#10;&#10;function currentSlide(slideIndex) {&#10;    currentSlideIndex = slideIndex - 1;&#10;    updateCarousel();&#10;}&#10;&#10;// Auto-advance carousel every 5 seconds&#10;function startCarouselAutoplay() {&#10;// Auto-advance carousel every 5 seconds&#10;// Touch/swipe support for mobile&#10;// Auto-advance carousel every 5 seconds&#10;        wrapper.addEventListener('touchstart', (e) =&gt; {&#10;// Auto-advance carousel every 5 seconds&#10;            const diffX = startX - endX;&#10;&#10;            if (Math.abs(diffX) &gt; 50) { // Minimum swipe distance&#10;                if (diffX &gt; 0) {&#10;                    changeSlide(1); // Swipe left - next slide&#10;                } else {&#10;                    changeSlide(-1); // Swipe right - previous slide&#10;                }&#10;            }&#10;        });&#10;    }&#10;}&#10;&#10;// Initialize carousel when DOM is loaded&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    if (wrapper &amp;&amp; slides.length &gt; 0) {&#10;        startCarouselAutoplay();&#10;        initCarouselTouchSupport();&#10;    }&#10;});" />
              <option name="updatedContent" value="// Carousel functionality&#10;let currentSlideIndex = 0;&#10;const slides = document.querySelectorAll('.carousel-slide');&#10;const totalSlides = slides.length;&#10;const wrapper = document.getElementById('carouselWrapper');&#10;const dots = document.querySelectorAll('.carousel-dot');&#10;&#10;function updateCarousel() {&#10;    const translateX = -currentSlideIndex * 100;&#10;    if (wrapper) {&#10;        wrapper.style.transform = `translateX(${translateX}%)`;&#10;    }&#10;&#10;    // Update dots&#10;    dots.forEach((dot, index) =&gt; {&#10;        dot.classList.toggle('active', index === currentSlideIndex);&#10;    });&#10;}&#10;&#10;function changeSlide(direction) {&#10;    currentSlideIndex += direction;&#10;&#10;    if (currentSlideIndex &gt;= totalSlides) {&#10;        currentSlideIndex = 0;&#10;    } else if (currentSlideIndex &lt; 0) {&#10;        currentSlideIndex = totalSlides - 1;&#10;    }&#10;&#10;    updateCarousel();&#10;}&#10;&#10;function currentSlide(slideIndex) {&#10;    currentSlideIndex = slideIndex - 1;&#10;    updateCarousel();&#10;}&#10;&#10;// Expose functions for inline handlers&#10;window.changeSlide = changeSlide;&#10;window.currentSlide = currentSlide;&#10;&#10;// Auto-advance carousel every 5 segundos&#10;function startCarouselAutoplay() {&#10;    setInterval(() =&gt; {&#10;        changeSlide(1);&#10;    }, 5000);&#10;}&#10;&#10;// Touch/swipe support for mobile&#10;function initCarouselTouchSupport() {&#10;    let startX = 0;&#10;    let endX = 0;&#10;&#10;    if (wrapper) {&#10;        wrapper.addEventListener('touchstart', (e) =&gt; {&#10;            startX = e.touches[0].clientX;&#10;        });&#10;&#10;        wrapper.addEventListener('touchend', (e) =&gt; {&#10;            endX = e.changedTouches[0].clientX;&#10;            const diffX = startX - endX;&#10;&#10;            if (Math.abs(diffX) &gt; 50) { // Minimum swipe distance&#10;                if (diffX &gt; 0) {&#10;                    changeSlide(1); // Swipe left - next slide&#10;                } else {&#10;                    changeSlide(-1); // Swipe right - previous slide&#10;                }&#10;            }&#10;        });&#10;    }&#10;}&#10;&#10;// Initialize carousel when DOM is loaded&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    if (wrapper &amp;&amp; slides.length &gt; 0) {&#10;        startCarouselAutoplay();&#10;        initCarouselTouchSupport();&#10;    }&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/js/main.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/js/main.js" />
              <option name="originalContent" value="// Debug: mostrar URL actual&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const currentUrlElement = document.getElementById('currentUrl');&#10;    if (currentUrlElement) {&#10;        currentUrlElement.textContent = window.location.href;&#10;    }&#10;});&#10;&#10;// Inicializar cuando carga la página (robusto)&#10;window.addEventListener('load', async () =&gt; {&#10;    console.log('Inicializando aplicación...');&#10;    try {&#10;        if (typeof window.initializeGoogleSignIn === 'function') {&#10;            await window.initializeGoogleSignIn();&#10;        }&#10;    } catch (e) {&#10;        console.warn('No se pudo inicializar Google aún:', e);&#10;    }&#10;    try {&#10;        if (typeof window.updateUserInterface === 'function') {&#10;            window.updateUserInterface();&#10;        }&#10;    } catch (e) {&#10;        console.warn('No se pudo actualizar UI:', e);&#10;    }&#10;});&#10;&#10;// Smooth scrolling para los enlaces del menú&#10;document.querySelectorAll('a[href^=&quot;#&quot;]').forEach(anchor =&gt; {&#10;    anchor.addEventListener('click', function (e) {&#10;        e.preventDefault();&#10;        const target = document.querySelector(this.getAttribute('href'));&#10;        if (target) {&#10;            target.scrollIntoView({&#10;                behavior: 'smooth',&#10;                block: 'start'&#10;            });&#10;        }&#10;    });&#10;});&#10;&#10;// Efecto hover en las tarjetas de pricing&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    document.querySelectorAll('.pricing-card').forEach(card =&gt; {&#10;        card.addEventListener('mouseenter', function() {&#10;            this.style.boxShadow = '0 10px 30px rgba(0, 212, 255, 0.3)';&#10;        });&#10;&#10;        card.addEventListener('mouseleave', function() {&#10;            this.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';&#10;        });&#10;    });&#10;});&#10;&#10;// Cerrar dropdown al hacer click fuera&#10;document.addEventListener('click', function(event) {&#10;    const dropdown = document.getElementById('dropdownMenu');&#10;    const avatar = document.getElementById('userAvatar');&#10;&#10;    if (dropdown &amp;&amp; dropdown.classList.contains('show') &amp;&amp;&#10;        !dropdown.contains(event.target) &amp;&amp;&#10;        event.target !== avatar) {&#10;        dropdown.classList.remove('show');&#10;    }&#10;});&#10;&#10;// Cerrar modal al hacer click fuera&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const loginModal = document.getElementById('loginModal');&#10;    if (loginModal) {&#10;        loginModal.addEventListener('click', function(e) {&#10;            if (e.target === this) {&#10;                closeLoginModal();&#10;            }&#10;        });&#10;    }&#10;});&#10;&#10;// Cerrar modal con tecla Escape&#10;document.addEventListener('keydown', function(e) {&#10;    if (e.key === 'Escape') {&#10;        closeLoginModal();&#10;    }&#10;});&#10;&#10;// Función utilitaria para mostrar notificaciones (opcional)&#10;function showNotification(message, type = 'info') {&#10;    // Crear elemento de notificación&#10;    const notification = document.createElement('div');&#10;    notification.className = `notification notification-${type}`;&#10;    notification.textContent = message;&#10;    notification.style.cssText = `&#10;        position: fixed;&#10;        top: 20px;&#10;        right: 20px;&#10;        padding: 15px 20px;&#10;        background: ${type === 'error' ? '#dc3545' : '#00d4ff'};&#10;        color: white;&#10;        border-radius: 5px;&#10;        z-index: 10001;&#10;        transition: opacity 0.3s;&#10;    `;&#10;&#10;    document.body.appendChild(notification);&#10;&#10;    // Remover después de 3 segundos&#10;    setTimeout(() =&gt; {&#10;        notification.style.opacity = '0';&#10;        setTimeout(() =&gt; {&#10;            document.body.removeChild(notification);&#10;        }, 300);&#10;    }, 3000);&#10;}&#10;&#10;// Reveal-on-scroll animations (no blur)&#10;(() =&gt; {&#10;    const REVEAL_SECTIONS = ['.carousel-section', '.features', '.pricing'];&#10;    const STAGGER_CONTAINERS = ['.features-grid', '.pricing-grid'];&#10;&#10;    const io = new IntersectionObserver((entries) =&gt; {&#10;        entries.forEach(entry =&gt; {&#10;            const el = entry.target;&#10;            const isSection = el.classList.contains('features') || el.classList.contains('pricing') || el.classList.contains('carousel-section');&#10;            const isStagger = el.classList.contains('stagger');&#10;&#10;            if (entry.isIntersecting) {&#10;                if (isSection) el.classList.add('revealed');&#10;                if (isStagger) el.classList.add('in-view');&#10;            } else {&#10;                // Remove classes when leaving so they can animate again later&#10;                if (isSection) el.classList.remove('revealed');&#10;                if (isStagger) el.classList.remove('in-view');&#10;            }&#10;        });&#10;    }, { threshold: 0.15, rootMargin: '0px 0px -60px 0px' });&#10;&#10;    document.addEventListener('DOMContentLoaded', () =&gt; {&#10;        // Observe main sections&#10;        REVEAL_SECTIONS.forEach(sel =&gt; {&#10;            document.querySelectorAll(sel).forEach(el =&gt; io.observe(el));&#10;        });&#10;        // Add and observe stagger containers&#10;        STAGGER_CONTAINERS.forEach(sel =&gt; {&#10;            document.querySelectorAll(sel).forEach(el =&gt; {&#10;                el.classList.add('stagger');&#10;                io.observe(el);&#10;            });&#10;        });&#10;    });&#10;})();&#10;&#10;// Bind login button click to global loginWithGoogle&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const loginBtn = document.getElementById('loginBtn');&#10;    if (loginBtn) {&#10;        loginBtn.addEventListener('click', async () =&gt; {&#10;            if (typeof window.loginWithGoogle === 'function') {&#10;                try { await window.loginWithGoogle(); } catch (e) { console.warn('Login error:', e); }&#10;            } else {&#10;                // Fallback: open modal if function is not ready yet&#10;                try { document.getElementById('loginModal')?.classList.add('show'); } catch {}&#10;            }&#10;        });&#10;    }&#10;});&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="// Debug: mostrar URL actual&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const currentUrlElement = document.getElementById('currentUrl');&#10;    if (currentUrlElement) {&#10;        currentUrlElement.textContent = window.location.href;&#10;    }&#10;});&#10;&#10;// Inicializar cuando carga la página (robusto)&#10;window.addEventListener('load', async () =&gt; {&#10;    console.log('Inicializando aplicación...');&#10;    try {&#10;        if (typeof window.initializeGoogleSignIn === 'function') {&#10;            await window.initializeGoogleSignIn();&#10;        }&#10;    } catch (e) {&#10;        console.warn('No se pudo inicializar Google aún:', e);&#10;    }&#10;    try {&#10;        if (typeof window.updateUserInterface === 'function') {&#10;            window.updateUserInterface();&#10;        }&#10;    } catch (e) {&#10;        console.warn('No se pudo actualizar UI:', e);&#10;    }&#10;});&#10;&#10;// Smooth scrolling para los enlaces del menú&#10;document.querySelectorAll('a[href^=&quot;#&quot;]').forEach(anchor =&gt; {&#10;    anchor.addEventListener('click', function (e) {&#10;        e.preventDefault();&#10;        const target = document.querySelector(this.getAttribute('href'));&#10;        if (target) {&#10;            target.scrollIntoView({&#10;                behavior: 'smooth',&#10;                block: 'start'&#10;            });&#10;        }&#10;    });&#10;});&#10;&#10;// Efecto hover en las tarjetas de pricing&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    document.querySelectorAll('.pricing-card').forEach(card =&gt; {&#10;        card.addEventListener('mouseenter', function() {&#10;            this.style.boxShadow = '0 10px 30px rgba(0, 212, 255, 0.3)';&#10;        });&#10;&#10;        card.addEventListener('mouseleave', function() {&#10;            this.style.boxShadow = '0 2px 10px rgba(0,0,0,0.1)';&#10;        });&#10;    });&#10;});&#10;&#10;// Cerrar dropdown al hacer click fuera&#10;document.addEventListener('click', function(event) {&#10;    const dropdown = document.getElementById('dropdownMenu');&#10;    const avatar = document.getElementById('userAvatar');&#10;&#10;    if (dropdown &amp;&amp; dropdown.classList.contains('show') &amp;&amp;&#10;        !dropdown.contains(event.target) &amp;&amp;&#10;        event.target !== avatar) {&#10;        dropdown.classList.remove('show');&#10;    }&#10;});&#10;&#10;// Cerrar modal al hacer click fuera&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const loginModal = document.getElementById('loginModal');&#10;    if (loginModal) {&#10;        loginModal.addEventListener('click', function(e) {&#10;            if (e.target === this) {&#10;                closeLoginModal();&#10;            }&#10;        });&#10;    }&#10;});&#10;&#10;// Cerrar modal con tecla Escape&#10;document.addEventListener('keydown', function(e) {&#10;    if (e.key === 'Escape') {&#10;        closeLoginModal();&#10;    }&#10;});&#10;&#10;// Función utilitaria para mostrar notificaciones (opcional)&#10;function showNotification(message, type = 'info') {&#10;    // Crear elemento de notificación&#10;    const notification = document.createElement('div');&#10;    notification.className = `notification notification-${type}`;&#10;    notification.textContent = message;&#10;    notification.style.cssText = `&#10;        position: fixed;&#10;        top: 20px;&#10;        right: 20px;&#10;        padding: 15px 20px;&#10;        background: ${type === 'error' ? '#dc3545' : '#00d4ff'};&#10;        color: white;&#10;        border-radius: 5px;&#10;        z-index: 10001;&#10;        transition: opacity 0.3s;&#10;    `;&#10;&#10;    document.body.appendChild(notification);&#10;&#10;    // Remover después de 3 segundos&#10;    setTimeout(() =&gt; {&#10;        notification.style.opacity = '0';&#10;        setTimeout(() =&gt; {&#10;            document.body.removeChild(notification);&#10;        }, 300);&#10;    }, 3000);&#10;}&#10;&#10;// Reveal-on-scroll animations (no blur)&#10;(() =&gt; {&#10;    const REVEAL_SECTIONS = ['.carousel-section', '.features', '.pricing'];&#10;    const STAGGER_CONTAINERS = ['.features-grid', '.pricing-grid'];&#10;&#10;    const io = new IntersectionObserver((entries) =&gt; {&#10;        entries.forEach(entry =&gt; {&#10;            const el = entry.target;&#10;            const isSection = el.classList.contains('features') || el.classList.contains('pricing') || el.classList.contains('carousel-section');&#10;            const isStagger = el.classList.contains('stagger');&#10;&#10;            if (entry.isIntersecting) {&#10;                if (isSection) el.classList.add('revealed');&#10;                if (isStagger) el.classList.add('in-view');&#10;            } else {&#10;                // Remove classes when leaving so they can animate again later&#10;                if (isSection) el.classList.remove('revealed');&#10;                if (isStagger) el.classList.remove('in-view');&#10;            }&#10;        });&#10;    }, { threshold: 0.15, rootMargin: '0px 0px -60px 0px' });&#10;&#10;    document.addEventListener('DOMContentLoaded', () =&gt; {&#10;        // Observe main sections&#10;        REVEAL_SECTIONS.forEach(sel =&gt; {&#10;            document.querySelectorAll(sel).forEach(el =&gt; io.observe(el));&#10;        });&#10;        // Add and observe stagger containers&#10;        STAGGER_CONTAINERS.forEach(sel =&gt; {&#10;            document.querySelectorAll(sel).forEach(el =&gt; {&#10;                el.classList.add('stagger');&#10;                io.observe(el);&#10;            });&#10;        });&#10;    });&#10;})();&#10;&#10;// Bind login button click to global loginWithGoogle&#10;document.addEventListener('DOMContentLoaded', function() {&#10;    const loginBtn = document.getElementById('loginBtn');&#10;    if (loginBtn) {&#10;        loginBtn.addEventListener('click', async () =&gt; {&#10;            if (typeof window.loginWithGoogle === 'function') {&#10;                try { await window.loginWithGoogle(); } catch (e) { console.warn('Login error:', e); }&#10;            } else {&#10;                // Fallback: open modal if function is not ready yet&#10;                try { document.getElementById('loginModal')?.classList.add('show'); } catch {}&#10;            }&#10;        });&#10;    }&#10;&#10;    // Toggle dropdown al clickear avatar&#10;    const avatar = document.getElementById('userAvatar');&#10;    if (avatar) {&#10;        avatar.addEventListener('click', () =&gt; {&#10;            if (typeof window.toggleDropdown === 'function') window.toggleDropdown();&#10;        });&#10;    }&#10;&#10;    // Logout desde el menú&#10;    const logoutBtn = document.getElementById('logoutBtn');&#10;    if (logoutBtn) {&#10;        logoutBtn.addEventListener('click', () =&gt; {&#10;            if (typeof window.logout === 'function') window.logout();&#10;        });&#10;    }&#10;&#10;    // Cerrar modal con la X&#10;    const closeLoginBtn = document.getElementById('closeLoginBtn');&#10;    if (closeLoginBtn) {&#10;        closeLoginBtn.addEventListener('click', () =&gt; {&#10;            if (typeof window.closeLoginModal === 'function') window.closeLoginModal();&#10;        });&#10;    }&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/package.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/package.json" />
              <option name="originalContent" value="{&#10;  &quot;name&quot;: &quot;WebTest&quot;,&#10;  &quot;version&quot;: &quot;1.0.0&quot;,&#10;  &quot;description&quot;: &quot;&quot;,&#10;  &quot;main&quot;: &quot;js/auth.js&quot;,&#10;  &quot;scripts&quot;: {&#10;  &quot;private&quot;: true&#10;  &quot;private&quot;: true&#10;  &quot;private&quot;: true&#10;&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;name&quot;: &quot;WebTest&quot;,&#10;  &quot;version&quot;: &quot;1.0.0&quot;,&#10;  &quot;description&quot;: &quot;&quot;,&#10;  &quot;main&quot;: &quot;js/auth.js&quot;,&#10;  &quot;scripts&quot;: {&#10;    &quot;start&quot;: &quot;node server.js&quot;,&#10;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;&#10;  },&#10;  &quot;private&quot;: true,&#10;  &quot;dependencies&quot;: {&#10;    &quot;express&quot;: &quot;^4.19.2&quot;&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/server.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/server.js" />
              <option name="originalContent" value="// Simple Express server to serve static site and JSON storage per user&#10;const express = require('express');&#10;const fs = require('fs');&#10;const path = require('path');&#10;&#10;const app = express();&#10;const PORT = process.env.PORT || 3000;&#10;&#10;// Paths for persistent data&#10;const DATA_DIR = path.join(__dirname, 'data');&#10;const VPS_DIR = path.join(DATA_DIR, 'vps');&#10;const USERS_FILE = path.join(DATA_DIR, 'users.json');&#10;&#10;// Ensure data directories exist&#10;fs.mkdirSync(VPS_DIR, { recursive: true });&#10;if (!fs.existsSync(USERS_FILE)) {&#10;  fs.writeFileSync(USERS_FILE, JSON.stringify({ users: {} }, null, 2));&#10;}&#10;&#10;app.use(express.json());&#10;app.use(express.urlencoded({ extended: false }));&#10;&#10;// In-memory session store keyed by remote IP&#10;const sessionsByIp = new Map();&#10;&#10;function getClientIp(req) {&#10;  return (&#10;    (req.headers['x-forwarded-for']?.split(',')[0] || '').trim() ||&#10;    req.socket.remoteAddress ||&#10;    req.ip ||&#10;    'unknown'&#10;  );&#10;}&#10;&#10;function userKey(user) {&#10;  const base = (user.email || user.sub || 'anon').toLowerCase();&#10;  return base.replace(/[^a-z0-9._-]+/g, '_');&#10;}&#10;&#10;function loadUserVps(key) {&#10;  const file = path.join(VPS_DIR, `${key}.json`);&#10;  if (!fs.existsSync(file)) return null;&#10;  try { return JSON.parse(fs.readFileSync(file, 'utf8')); } catch { return null; }&#10;}&#10;&#10;function saveUserVps(key, vpsList) {&#10;  const file = path.join(VPS_DIR, `${key}.json`);&#10;  fs.writeFileSync(file, JSON.stringify(vpsList, null, 2));&#10;}&#10;&#10;function ensureUserStored(user) {&#10;  try {&#10;    const data = JSON.parse(fs.readFileSync(USERS_FILE, 'utf8'));&#10;    const key = userKey(user);&#10;    if (!data.users[key]) {&#10;      data.users[key] = { name: user.name, email: user.email, sub: user.sub, picture: user.picture, createdAt: new Date().toISOString() };&#10;      fs.writeFileSync(USERS_FILE, JSON.stringify(data, null, 2));&#10;    }&#10;  } catch (e) {&#10;    // recreate file on error&#10;    const data = { users: {} };&#10;    const key = userKey(user);&#10;    data.users[key] = { name: user.name, email: user.email, sub: user.sub, picture: user.picture, createdAt: new Date().toISOString() };&#10;    fs.writeFileSync(USERS_FILE, JSON.stringify(data, null, 2));&#10;  }&#10;}&#10;&#10;// Session endpoints&#10;app.get('/api/session', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip) || null;&#10;  res.json({ user });&#10;});&#10;&#10;app.post('/api/session', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = req.body?.user;&#10;  if (!user || (!user.email &amp;&amp; !user.sub)) return res.status(400).json({ error: 'user required' });&#10;  sessionsByIp.set(ip, user);&#10;  ensureUserStored(user);&#10;  // Ensure VPS file exists but start empty for new users&#10;  const key = userKey(user);&#10;  let vps = loadUserVps(key);&#10;  if (!vps) {&#10;    vps = [];&#10;    saveUserVps(key, vps);&#10;  }&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Accept Google credential directly and create session&#10;app.post('/api/gsicred', (req, res) =&gt; {&#10;  try {&#10;    const cred = req.body &amp;&amp; req.body.credential;&#10;    if (!cred) return res.status(400).json({ error: 'missing credential' });&#10;    const parts = cred.split('.');&#10;    if (parts.length &lt; 2) return res.status(400).json({ error: 'bad credential' });&#10;    const payloadJson = Buffer.from(parts[1], 'base64url').toString('utf8');&#10;    const payload = JSON.parse(payloadJson);&#10;    const user = { name: payload.name, email: payload.email, picture: payload.picture, sub: payload.sub };&#10;    const ip = getClientIp(req);&#10;    sessionsByIp.set(ip, user);&#10;    ensureUserStored(user);&#10;    const key = userKey(user);&#10;    let vps = loadUserVps(key);&#10;    if (!vps) { saveUserVps(key, []); }&#10;    res.json({ user });&#10;  } catch (e) {&#10;    console.error('GSICred error:', e);&#10;    res.status(500).json({ error: 'failed to process credential' });&#10;  }&#10;});&#10;&#10;// VPS endpoints&#10;app.get('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  let vps = loadUserVps(key);&#10;  if (!vps) {&#10;    vps = [];&#10;    saveUserVps(key, vps);&#10;  }&#10;  res.json(vps);&#10;});&#10;&#10;// Create a new VPS for current user&#10;app.post('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  const list = loadUserVps(key) || [];&#10;&#10;  const now = Date.now();&#10;  const body = req.body || {};&#10;  const diskNum = parseInt(body.disk, 10) || [20, 40, 80, 160][now % 4];&#10;  const usedNum = Math.min(diskNum - 1, Math.max(1, Math.floor(diskNum * 0.3)));&#10;&#10;  const vps = {&#10;    id: body.id || `vps-${now}`,&#10;    name: body.name || `VPS-${(now % 10000)}`,&#10;    region: body.region || 'Buenos Aires',&#10;    status: body.status || 'running',&#10;    cpu: body.cpu || '1 vCPU',&#10;    ram: body.ram || '1024 MB',&#10;    disk: (body.disk ? String(body.disk) : String(diskNum)) + ' GB',&#10;    used: (body.used ? String(body.used) : String(usedNum)) + ' GB'&#10;  };&#10;&#10;  list.push(vps);&#10;  saveUserVps(key, list);&#10;  res.status(201).json(vps);&#10;});&#10;&#10;// Delete a VPS by id for current user&#10;app.delete('/api/vps/:id', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  const list = loadUserVps(key) || [];&#10;  const id = req.params.id;&#10;  const newList = list.filter(v =&gt; v.id !== id);&#10;  if (newList.length === list.length) {&#10;    return res.status(404).json({ error: 'not found' });&#10;  }&#10;  saveUserVps(key, newList);&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Delete ALL VPS for current user&#10;app.delete('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  saveUserVps(key, []);&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Handle Google Sign-In redirect mode callback&#10;app.post('/auth/callback', (req, res) =&gt; {&#10;  try {&#10;    const cred = req.body &amp;&amp; req.body.credential;&#10;    if (!cred) return res.status(400).send('Missing credential');&#10;    const parts = cred.split('.');&#10;    if (parts.length &lt; 2) return res.status(400).send('Bad credential');&#10;    const payloadJson = Buffer.from(parts[1], 'base64url').toString('utf8');&#10;    const payload = JSON.parse(payloadJson);&#10;    const user = {&#10;      name: payload.name,&#10;      email: payload.email,&#10;      picture: payload.picture,&#10;      sub: payload.sub&#10;    };&#10;    const ip = getClientIp(req);&#10;    sessionsByIp.set(ip, user);&#10;    ensureUserStored(user);&#10;    // Ensure VPS file exists&#10;    const key = userKey(user);&#10;    let vps = loadUserVps(key);&#10;    if (!vps) { saveUserVps(key, []); }&#10;    // Redirect to home where client will sync session&#10;    res.redirect('/');&#10;  } catch (e) {&#10;    console.error('Auth callback error:', e);&#10;    res.status(500).send('Auth failed');&#10;  }&#10;});&#10;&#10;// Static files&#10;app.use(express.static(__dirname));&#10;&#10;// Fallback to index.html&#10;app.get('*', (req, res) =&gt; {&#10;  res.sendFile(path.join(__dirname, 'index.html'));&#10;});&#10;&#10;app.listen(PORT, () =&gt; {&#10;  console.log(`Server running on http://localhost:${PORT}`);&#10;});&#10;//root key 4e003e52-2917-4d46-bc1f-7524094b1f88" />
              <option name="updatedContent" value="// Simple Express server to serve static site and JSON storage per user&#10;const express = require('express');&#10;const fs = require('fs');&#10;const path = require('path');&#10;&#10;const app = express();&#10;const PORT = process.env.PORT || 3000;&#10;&#10;// Paths for persistent data&#10;const DATA_DIR = path.join(__dirname, 'data');&#10;const VPS_DIR = path.join(DATA_DIR, 'vps');&#10;const USERS_FILE = path.join(DATA_DIR, 'users.json');&#10;&#10;// Ensure data directories exist&#10;fs.mkdirSync(VPS_DIR, { recursive: true });&#10;if (!fs.existsSync(USERS_FILE)) {&#10;  fs.writeFileSync(USERS_FILE, JSON.stringify({ users: {} }, null, 2));&#10;}&#10;&#10;app.use(express.json());&#10;app.use(express.urlencoded({ extended: false }));&#10;&#10;// In-memory session store keyed by remote IP&#10;const sessionsByIp = new Map();&#10;&#10;function getClientIp(req) {&#10;  return (&#10;    (req.headers['x-forwarded-for']?.split(',')[0] || '').trim() ||&#10;    req.socket.remoteAddress ||&#10;    req.ip ||&#10;    'unknown'&#10;  );&#10;}&#10;&#10;function userKey(user) {&#10;  const base = (user.email || user.sub || 'anon').toLowerCase();&#10;  return base.replace(/[^a-z0-9._-]+/g, '_');&#10;}&#10;&#10;function loadUserVps(key) {&#10;  const file = path.join(VPS_DIR, `${key}.json`);&#10;  if (!fs.existsSync(file)) return null;&#10;  try { return JSON.parse(fs.readFileSync(file, 'utf8')); } catch { return null; }&#10;}&#10;&#10;function saveUserVps(key, vpsList) {&#10;  const file = path.join(VPS_DIR, `${key}.json`);&#10;  fs.writeFileSync(file, JSON.stringify(vpsList, null, 2));&#10;}&#10;&#10;function ensureUserStored(user) {&#10;  try {&#10;    const data = JSON.parse(fs.readFileSync(USERS_FILE, 'utf8'));&#10;    const key = userKey(user);&#10;    if (!data.users[key]) {&#10;      data.users[key] = { name: user.name, email: user.email, sub: user.sub, picture: user.picture, createdAt: new Date().toISOString() };&#10;      fs.writeFileSync(USERS_FILE, JSON.stringify(data, null, 2));&#10;    }&#10;  } catch (e) {&#10;    // recreate file on error&#10;    const data = { users: {} };&#10;    const key = userKey(user);&#10;    data.users[key] = { name: user.name, email: user.email, sub: user.sub, picture: user.picture, createdAt: new Date().toISOString() };&#10;    fs.writeFileSync(USERS_FILE, JSON.stringify(data, null, 2));&#10;  }&#10;}&#10;&#10;// Set headers to allow Google popup to postMessage back (avoid COOP blocking)&#10;app.use((req, res, next) =&gt; {&#10;  res.setHeader('Cross-Origin-Opener-Policy', 'same-origin-allow-popups');&#10;  // Do not set Cross-Origin-Embedder-Policy here to avoid cross-origin isolation&#10;  next();&#10;});&#10;&#10;// Session endpoints&#10;app.get('/api/session', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip) || null;&#10;  res.json({ user });&#10;});&#10;&#10;app.post('/api/session', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = req.body?.user;&#10;  if (!user || (!user.email &amp;&amp; !user.sub)) return res.status(400).json({ error: 'user required' });&#10;  sessionsByIp.set(ip, user);&#10;  ensureUserStored(user);&#10;  // Ensure VPS file exists but start empty for new users&#10;  const key = userKey(user);&#10;  let vps = loadUserVps(key);&#10;  if (!vps) {&#10;    vps = [];&#10;    saveUserVps(key, vps);&#10;  }&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Add missing DELETE to clear session&#10;app.delete('/api/session', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  sessionsByIp.delete(ip);&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Accept Google credential directly and create session&#10;app.post('/api/gsicred', (req, res) =&gt; {&#10;  try {&#10;    const cred = req.body &amp;&amp; req.body.credential;&#10;    if (!cred) return res.status(400).json({ error: 'missing credential' });&#10;    const parts = cred.split('.');&#10;    if (parts.length &lt; 2) return res.status(400).json({ error: 'bad credential' });&#10;    const payloadJson = Buffer.from(parts[1], 'base64url').toString('utf8');&#10;    const payload = JSON.parse(payloadJson);&#10;    const user = { name: payload.name, email: payload.email, picture: payload.picture, sub: payload.sub };&#10;    const ip = getClientIp(req);&#10;    sessionsByIp.set(ip, user);&#10;    ensureUserStored(user);&#10;    const key = userKey(user);&#10;    let vps = loadUserVps(key);&#10;    if (!vps) { saveUserVps(key, []); }&#10;    res.json({ user });&#10;  } catch (e) {&#10;    console.error('GSICred error:', e);&#10;    res.status(500).json({ error: 'failed to process credential' });&#10;  }&#10;});&#10;&#10;// VPS endpoints&#10;app.get('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  let vps = loadUserVps(key);&#10;  if (!vps) {&#10;    vps = [];&#10;    saveUserVps(key, vps);&#10;  }&#10;  res.json(vps);&#10;});&#10;&#10;// Create a new VPS for current user&#10;app.post('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  const list = loadUserVps(key) || [];&#10;&#10;  const now = Date.now();&#10;  const body = req.body || {};&#10;  const diskNum = parseInt(body.disk, 10) || [20, 40, 80, 160][now % 4];&#10;  const usedNum = Math.min(diskNum - 1, Math.max(1, Math.floor(diskNum * 0.3)));&#10;&#10;  const vps = {&#10;    id: body.id || `vps-${now}`,&#10;    name: body.name || `VPS-${(now % 10000)}`,&#10;    region: body.region || 'Buenos Aires',&#10;    status: body.status || 'running',&#10;    cpu: body.cpu || '1 vCPU',&#10;    ram: body.ram || '1024 MB',&#10;    disk: (body.disk ? String(body.disk) : String(diskNum)) + ' GB',&#10;    used: (body.used ? String(body.used) : String(usedNum)) + ' GB'&#10;  };&#10;&#10;  list.push(vps);&#10;  saveUserVps(key, list);&#10;  res.status(201).json(vps);&#10;});&#10;&#10;// Delete a VPS by id for current user&#10;app.delete('/api/vps/:id', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  const list = loadUserVps(key) || [];&#10;  const id = req.params.id;&#10;  const newList = list.filter(v =&gt; v.id !== id);&#10;  if (newList.length === list.length) {&#10;    return res.status(404).json({ error: 'not found' });&#10;  }&#10;  saveUserVps(key, newList);&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Delete ALL VPS for current user&#10;app.delete('/api/vps', (req, res) =&gt; {&#10;  const ip = getClientIp(req);&#10;  const user = sessionsByIp.get(ip);&#10;  if (!user) return res.status(401).json({ error: 'not authenticated' });&#10;  const key = userKey(user);&#10;  saveUserVps(key, []);&#10;  res.json({ ok: true });&#10;});&#10;&#10;// Handle Google Sign-In redirect mode callback&#10;app.post('/auth/callback', (req, res) =&gt; {&#10;  try {&#10;    const cred = req.body &amp;&amp; req.body.credential;&#10;    if (!cred) return res.status(400).send('Missing credential');&#10;    const parts = cred.split('.');&#10;    if (parts.length &lt; 2) return res.status(400).send('Bad credential');&#10;    const payloadJson = Buffer.from(parts[1], 'base64url').toString('utf8');&#10;    const payload = JSON.parse(payloadJson);&#10;    const user = {&#10;      name: payload.name,&#10;      email: payload.email,&#10;      picture: payload.picture,&#10;      sub: payload.sub&#10;    };&#10;    const ip = getClientIp(req);&#10;    sessionsByIp.set(ip, user);&#10;    ensureUserStored(user);&#10;    // Ensure VPS file exists&#10;    const key = userKey(user);&#10;    let vps = loadUserVps(key);&#10;    if (!vps) { saveUserVps(key, []); }&#10;    // Redirect to home where client will sync session&#10;    res.redirect('/');&#10;  } catch (e) {&#10;    console.error('Auth callback error:', e);&#10;    res.status(500).send('Auth failed');&#10;  }&#10;});&#10;&#10;// Static files&#10;app.use(express.static(__dirname));&#10;&#10;// Fallback to index.html&#10;app.get('*', (req, res) =&gt; {&#10;  res.sendFile(path.join(__dirname, 'index.html'));&#10;});&#10;&#10;app.listen(PORT, () =&gt; {&#10;  console.log(`Server running on http://localhost:${PORT}`);&#10;});&#10;//root key 4e003e52-2917-4d46-bc1f-7524094b1f88" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>